{"version":3,"sources":["redux/reducers/search.js","redux/reducers/combinedReducers.js","redux/actions/query.js","components/SearchBar.js","redux/actions/imageLoad.js","components/ImagePreview.js","redux/actions/modalToggle.js","components/Spinner.js","components/ErrorModal.js","components/Gallery.js","components/SavedQueries.js","components/SaveButton.js","App.js","index.js"],"names":["initialState","photos","error","loading","query","savedQueries","onDisplay","loadProgress","saveQuery","state","action","type","queryKeyword","payload","includes","length","value","combined","combineReducers","search","unsplash","Unsplash","require","default","accessKey","secret","queryActions","queryRequest","dispatch","orientation","then","toJson","res","results","catch","rej","loadSaved","SearchBar","props","useDispatch","className","id","name","defaultValue","placeholder","htmlFor","onClick","e","preventDefault","keyword","document","getElementById","children","imageLoad","ImagePreview","utm","src","photo","urls","thumb","alt","description","onLoad","target","rel","href","links","html","user","username","toggleModal","Spinner","class","connect","queries","queryResult","map","index","key","SaveButton","documentElement","clientWidth","classList","add","toggle","role","aria-label","App","store","createStore","combinedReducers","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.a4ab2a56.chunk.js","sourcesContent":["\r\nconst initialState = {\r\n    photos: {},\r\n    error: null,\r\n    loading: false,\r\n    query: null,\r\n    savedQueries: [],\r\n    onDisplay: [],\r\n    loadProgress: null\r\n}\r\n\r\nconst saveQuery = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"QUERY_LOADING\":\r\n            return {\r\n                ...state, \r\n                loading: true\r\n            }\r\n        case \"QUERY_SUCCESS\":\r\n            return {\r\n                ...state, \r\n                photos: {\r\n                    ...state.photos,\r\n                    [action.queryKeyword]: action.payload\r\n                },\r\n                error: null,\r\n                query: action.queryKeyword,\r\n                onDisplay: action.payload\r\n            }\r\n        case \"QUERY_FAILURE\":\r\n            return {\r\n                ...state, \r\n                photos: {\r\n                    ...state.photos,\r\n                    [action.queryKeyword]: action.payload\r\n                },\r\n                error: action.error,\r\n                loading: false,\r\n                query: action.queryKeyword,\r\n                onDisplay: []\r\n            }\r\n        case \"QUERY_SAVE\":\r\n            if(!state.savedQueries.includes(state.query) && state.onDisplay.length > 0){\r\n                return {\r\n                    ...state, \r\n                    photos: {\r\n                        ...state.photos,\r\n                        [action.queryKeyword]: action.payload\r\n                    },\r\n                    error: null,\r\n                    loading: false,\r\n                    savedQueries: [...state.savedQueries, state.query]\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    error: \"Nothing to save\"\r\n                }\r\n            }\r\n        case \"QUERY_LOAD_SAVED\":\r\n                return {\r\n                    ...state, \r\n                    onDisplay: state.photos[action.query],\r\n                    error: null,\r\n                    query: action.query\r\n                }\r\n        case \"IMAGE_LOADING\":\r\n            if(state.loadProgress === state.onDisplay.length-1){\r\n                return {\r\n                    ...state,\r\n                    loadProgress: 0,\r\n                    loading: false\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loadProgress: state.loadProgress+1\r\n            }\r\n        case \"TOGGLE_MODAL\":\r\n            return {\r\n                ...state,\r\n                loading: action.value,\r\n                error: null\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default saveQuery","import search from './search'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst combined = combineReducers({\r\n    \"queries\": search\r\n})\r\n\r\nexport default combined","import { toJson } from 'unsplash-js'\r\n\r\nconst Unsplash = require('unsplash-js').default;\r\n\r\nconst unsplash = new Unsplash({ \r\naccessKey: \"G30dGv3bmlBVahi1AuWqaLxS7g7f4x0bABqwPhd8hHs\",\r\nsecret: \"RhWCrY76VVhLkjHkrLDtkSYGgnaL3pb19YdHv2OveBw\"\r\n});\r\n\r\nconst queryRequest = (value) => {\r\n    return dispatch => {\r\n            dispatch({\r\n                type: \"QUERY_LOADING\",\r\n                queryKeyword: value,\r\n                error: null,\r\n                loading: true\r\n            })\r\n            return unsplash.search.photos(value, 1, 10, { orientation: \"portrait\" })\r\n                  .then(toJson)\r\n                  .then(res => {\r\n                    if(res.results.length > 0){\r\n                        dispatch({\r\n                            type: \"QUERY_SUCCESS\",\r\n                            payload: res.results,\r\n                            queryKeyword: value,\r\n                            error: null\r\n                        })\r\n                    }\r\n                    else{\r\n                        dispatch({\r\n                            type: \"QUERY_FAILURE\",\r\n                            payload: res.photos,\r\n                            queryKeyword: value,\r\n                            error: \"Your query returned no results. Please try a different keyword\"\r\n                        })\r\n                    }\r\n                  })\r\n                  .catch(rej => {\r\n                      return(\r\n                        dispatch({\r\n                          type: \"QUERY_FAILURE\",\r\n                          queryKeyword: value,\r\n                          error: \"Your query returned no results. Please try a different keyword\"\r\n                      })\r\n                    )\r\n                  })\r\n            }\r\n    }\r\n\r\nconst saveQuery = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE\",\r\n        })\r\n    }\r\n}\r\n\r\nconst loadSaved = (query) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_LOAD_SAVED\",\r\n            query: query\r\n        })\r\n    }\r\n}\r\n\r\nconst updateQuery = () => {\r\n\r\n}\r\n\r\nconst queryActions = {\r\n    queryRequest, saveQuery, loadSaved\r\n}\r\n\r\nexport default queryActions","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport queryActions from '../redux/actions/query'\r\n\r\nconst SearchBar = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const search = (e) => {\r\n        e.preventDefault()\r\n        const keyword = document.getElementById(\"searchField\").value\r\n        dispatch(queryActions.queryRequest(keyword))\r\n    }\r\n\r\n    return(\r\n        <div className=\"searchBar-wrapper\">\r\n            <form className=\"searchField-form\">\r\n                    <input \r\n                        className=\"searchField-input\"\r\n                        id=\"searchField\" \r\n                        type=\"search\" \r\n                        name=\"\" \r\n                        defaultValue=\"\" \r\n                        placeholder=\"enter your query\"\r\n                    />\r\n                <div className=\"searchBar-buttons-wrapper\">\r\n                    <input \r\n                        className=\"searchField-button button\"\r\n                        htmlFor=\"searchField\" \r\n                        type=\"submit\" \r\n                        value=\"Search\" \r\n                        onClick={(e) => search(e)}\r\n                    />\r\n                    {props.children}\r\n                </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar","const imageLoad = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"IMAGE_LOADING\",\r\n            id: value\r\n        })\r\n    }\r\n}\r\n\r\nexport default imageLoad","import React from 'react'\r\nimport imageLoad from '../redux/actions/imageLoad' \r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst ImagePreview = (props) => {\r\n    const dispatch = useDispatch()\r\n    const utm = \"?utm_source=image-search&utm_medium=referral\"\r\n    return(\r\n        <div className=\"photoPreview-container\">\r\n            <img src={props.photo.urls.thumb} alt={props.photo.description} onLoad={() => dispatch(imageLoad())}/>\r\n            <div className=\"photoPreview-attribution_wrapper\">\r\n                <div className=\"photoPreview-attribution\">\r\n                    <span>Photo by </span><a target=\"_blank\" rel=\"noopener noreferrer\" href={`${props.photo.links.html}/${utm}`}><em>{props.photo.user.username}</em></a><span> on </span><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://unsplash.com/${utm}`}><em>Unsplash</em></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePreview","const toggleModal = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"TOGGLE_MODAL\",\r\n            value: value\r\n        })\r\n    }\r\n}\r\n\r\nexport default toggleModal","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <div id=\"fountainG\">\r\n            <div id=\"fountainG_1\" class=\"fountainG\"></div>\r\n            <div id=\"fountainG_2\" class=\"fountainG\"></div>\r\n            <div id=\"fountainG_3\" class=\"fountainG\"></div>\r\n            <div id=\"fountainG_4\" class=\"fountainG\"></div>\r\n            <div id=\"fountainG_5\" class=\"fountainG\"></div>\r\n            <div id=\"fountainG_6\" class=\"fountainG\"></div>\r\n            <div id=\"fountainG_7\" class=\"fountainG\"></div>\r\n            <div id=\"fountainG_8\" class=\"fountainG\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport toggleModal from '../redux/actions/modalToggle'\r\nimport Spinner from './Spinner'\r\n\r\nconst ErrorModal = (props) => {\r\n    const dispatch = useDispatch()\r\n    return(\r\n        <div id=\"errorModal\" className={`modal-wrapper ${props.photos.error || props.photos.loading ? \"modal-message_display\" : \"\"}`}>\r\n            {\r\n                props.photos.error ? \r\n                    <div className=\"modal-box\">\r\n                        <p>{props.photos.error ? props.photos.error : \"\"}</p>\r\n                        {\r\n                            props.photos.error ? \r\n                            <button className=\"button modal-button\"\r\n                                onClick={(e) => {\r\n                                    dispatch(toggleModal(false))\r\n                                }}\r\n                            >OKAY\r\n                            </button>\r\n                            : null\r\n                        }\r\n                    </div>\r\n                    : <Spinner />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state.queries\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(ErrorModal) ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport ImagePreview from './ImagePreview'\r\nimport ErrorModal from './ErrorModal'\r\n\r\nconst Gallery = (props) => {\r\n    const queryKeyword = props.photos.query\r\n    const queryResult = props.photos.onDisplay\r\n        return(\r\n            <div className=\"gallery\">\r\n                <ErrorModal />\r\n                {/* <div className=\"gallery-message\"> */}\r\n                    <div className=\"searchResults\">\r\n                        {\r\n                            queryKeyword && queryResult ? \r\n                                queryResult.map((photo, index) => {\r\n                                    return <ImagePreview \r\n                                                key={index}\r\n                                                photo={photo}\r\n                                            />\r\n                                }) :\r\n                                null\r\n                        }\r\n                    </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state.queries\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Gallery) ","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport queryActions from '../redux/actions/query'\r\n\r\n\r\nconst SavedQueries = (props) => {\r\n    const dispatch = useDispatch()\r\n    return(\r\n            <div className=\"savedQueries-wrapper\" id=\"savedQueries\">\r\n                <div className=\"savedQueries-results\">\r\n                    <ul>\r\n                        {\r\n                            props.queries.savedQueries ?\r\n                                props.queries.savedQueries.map(query => {\r\n                                    return  <li key={`savedQuer-${query}`}>\r\n                                                <button\r\n                                                    className={\"savedQueries-button button\"}\r\n                                                    onClick={() => {\r\n                                                        dispatch(queryActions.loadSaved(query))\r\n                                                    }}\r\n                                                >\r\n                                                    {query}\r\n                                                </button>\r\n                                            </li>\r\n                                }) :\r\n                                null\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    queries: state.queries\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(SavedQueries) ","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport queryActions from '../redux/actions/query'\r\n\r\nconst SaveButton = (props) => {\r\n    const mobile = () => {\r\n        if(document.documentElement.clientWidth < 768){\r\n            return true\r\n        }\r\n        else return false;\r\n    }\r\n    const dispatch = useDispatch()\r\n\r\n    // window.addEventListener(\"resize\", () => {\r\n    //     console.log(\"resize\")\r\n    //     mobile = document.documentElement.clientWidth < 768 ? true : false;\r\n    //     })\r\n\r\n    return(\r\n        <div className=\"saveButton-wrapper\">\r\n            <button \r\n                className={`searchField-button button saveButton ${props.className}`}\r\n                onClick={(e) => {\r\n                    e.preventDefault()\r\n                        if(mobile()){\r\n                            document.getElementById(\"savedQueries\").classList.add(\"savedQueries-wrapper_display\")\r\n                        }\r\n                    dispatch(queryActions.saveQuery())\r\n                }}\r\n            >\r\n                <span>SAVE</span>\r\n            </button>\r\n\r\n            <button \r\n                className=\"hamburger\"\r\n                onClick={(e) => {e.preventDefault(); document.getElementById(\"savedQueries\").classList.toggle(\"savedQueries-wrapper_display\")}}    \r\n            >\r\n                    <span role=\"img\" aria-label=\"hamburger icon\">🍔</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaveButton","import React from 'react';\r\n\r\nimport './css/main.css';\r\nimport SearchBar from './components/SearchBar';\r\nimport Gallery from './components/Gallery';\r\nimport SavedQueries from './components/SavedQueries';\r\nimport SaveButton from './components/SaveButton';\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n            <SearchBar>\r\n              <SaveButton />\r\n            </SearchBar>\r\n        <section className=\"main\">    \r\n            <Gallery />\r\n            <SavedQueries />\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default App\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n//store setup\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport combinedReducers from './redux/reducers/combinedReducers';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport './css/main.css';\r\nimport App from './App';\r\n\r\n\r\nconst initialState = {\r\n}\r\n\r\nconst store = createStore(\r\n    combinedReducers, \r\n    initialState,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>,\r\ndocument.getElementById('root')\r\n);"],"sourceRoot":""}