{"version":3,"sources":["redux/reducers/search.js","redux/reducers/combinedReducers.js","redux/actions/query.js","components/SearchBar.js","redux/actions/imageLoad.js","components/ImagePreview.js","redux/actions/modalToggle.js","components/Loader.js","components/ErrorModal.js","components/Gallery.js","components/SavedQueries.js","components/SaveButton.js","App.js","index.js"],"names":["initialState","photos","error","loading","query","savedQueries","onDisplay","loadProgress","savePrompt","saveQuery","state","action","type","queryKeyword","payload","includes","length","console","log","value","combined","combineReducers","search","unsplash","Unsplash","require","default","accessKey","secret","queryActions","queryRequest","dispatch","orientation","then","toJson","res","results","catch","rej","saveQueryRequest","saveQueryCancel","saveQueryConfirm","loadSaved","SearchBar","props","useDispatch","className","id","name","defaultValue","placeholder","htmlFor","onClick","e","preventDefault","keyword","document","getElementById","children","imageLoad","ImagePreview","utm","src","photo","urls","thumb","alt","description","onLoad","index","target","rel","href","links","html","user","username","toggleModal","connect","queries","progress","style","width","ErrorModal","customClass","message","queryResult","map","key","Fragment","SaveButton","documentElement","clientWidth","classList","add","toggle","role","aria-label","App","store","createStore","combinedReducers","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.62717129.chunk.js","sourcesContent":["\r\nconst initialState = {\r\n    photos: {},\r\n    error: null,\r\n    loading: false,\r\n    query: null,\r\n    savedQueries: [],\r\n    onDisplay: [],\r\n    loadProgress: 0,\r\n    savePrompt: null\r\n}\r\n\r\nconst saveQuery = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"QUERY_LOADING\":\r\n            if(action.queryKeyword === state.query){\r\n                return state\r\n            }\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                loadProgress: 0\r\n            }\r\n        case \"QUERY_SUCCESS\":\r\n            return {\r\n                ...state, \r\n                photos: {\r\n                    ...state.photos,\r\n                    [action.queryKeyword]: action.payload\r\n                },\r\n                error: null,\r\n                query: action.queryKeyword,\r\n                loadProgress: 0,\r\n                onDisplay: action.payload\r\n            }\r\n        case \"QUERY_FAILURE\":\r\n            return {\r\n                ...state, \r\n                photos: {\r\n                    ...state.photos,\r\n                    [action.queryKeyword]: action.payload\r\n                },\r\n                error: action.error,\r\n                loading: false,\r\n                query: action.queryKeyword,\r\n                loadProgress: 0,\r\n                onDisplay: []\r\n            }\r\n        case \"QUERY_SAVE_REQUEST\":\r\n            if(!state.savedQueries.includes(state.query) && state.onDisplay.length > 0){\r\n                return {\r\n                    ...state, \r\n                    savePrompt: `Do you want to save \"${state.query}\" to favourites?`\r\n                }\r\n            }\r\n            else if(state.savedQueries.includes(state.query)){\r\n                return{\r\n                    ...state,\r\n                    loadProgress: 0,\r\n                    savePrompt: `\"${state.query}\" is already recorded`\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    loadProgress: 0,\r\n                    savePrompt: \"Nothing to save\"\r\n                }\r\n            }\r\n        case \"QUERY_SAVE_CONFIRM\":\r\n                if(!state.savedQueries.includes(state.query) && state.onDisplay.length > 0){\r\n                    return {\r\n                        ...state, \r\n                        photos: {\r\n                            ...state.photos,\r\n                            [action.queryKeyword]: action.payload\r\n                        },\r\n                        error: null,\r\n                        loading: false,\r\n                        loadProgress: 0,\r\n                        savedQueries: [...state.savedQueries, state.query],\r\n                        savePrompt: null\r\n                    }\r\n                }\r\n\r\n        case \"QUERY_SAVE_CANCEL\": \r\n            return {\r\n                ...state,\r\n                savePrompt: null\r\n            }\r\n        case \"QUERY_LOAD_SAVED\":\r\n                return {\r\n                    ...state, \r\n                    onDisplay: state.photos[action.query],\r\n                    error: null,\r\n                    loadProgress: 0,\r\n                    query: action.query\r\n                }\r\n        case \"IMAGE_LOADING\":\r\n            console.log(state.loadProgress)\r\n            console.log(state.onDisplay.length-1)\r\n            console.log(state.loadProgress === state.onDisplay.length-1)\r\n            if(state.loadProgress === state.onDisplay.length-1){                   \r\n                return {\r\n                    ...state,\r\n                    loadProgress: state.loadProgress+1,\r\n                    loading: false\r\n                }       \r\n            }\r\n            else{\r\n                console.log(\"ELSE\")\r\n                return {\r\n                    ...state,\r\n                    loading: true,\r\n                    loadProgress: state.loadProgress+1\r\n                }\r\n            }\r\n        case \"TOGGLE_MODAL\":\r\n            return {\r\n                ...state,\r\n                loading: action.value,\r\n                loadProgress: 0,\r\n                error: null\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default saveQuery","import search from './search'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst combined = combineReducers({\r\n    \"queries\": search\r\n})\r\n\r\nexport default combined","import { toJson } from 'unsplash-js'\r\n\r\nconst Unsplash = require('unsplash-js').default;\r\n\r\nconst unsplash = new Unsplash({ \r\naccessKey: \"G30dGv3bmlBVahi1AuWqaLxS7g7f4x0bABqwPhd8hHs\",\r\nsecret: \"RhWCrY76VVhLkjHkrLDtkSYGgnaL3pb19YdHv2OveBw\"\r\n});\r\n\r\nconst queryRequest = (value) => {\r\n    return dispatch => {\r\n            dispatch({\r\n                type: \"QUERY_LOADING\",\r\n                queryKeyword: value,\r\n                error: null,\r\n                loading: true\r\n            })\r\n            return unsplash.search.photos(value, 1, 10, { orientation: \"portrait\" })\r\n                  .then(toJson)\r\n                  .then(res => {\r\n                    if(res.results.length > 0){\r\n                        dispatch({\r\n                            type: \"QUERY_SUCCESS\",\r\n                            payload: res.results,\r\n                            queryKeyword: value,\r\n                            error: null\r\n                        })\r\n                    }\r\n                    else{\r\n                        dispatch({\r\n                            type: \"QUERY_FAILURE\",\r\n                            payload: res.photos,\r\n                            queryKeyword: value,\r\n                            error: \"Your query returned no results. Please try a different keyword\"\r\n                        })\r\n                    }\r\n                  })\r\n                  .catch(rej => {\r\n                      return(\r\n                        dispatch({\r\n                          type: \"QUERY_FAILURE\",\r\n                          queryKeyword: value,\r\n                          error: \"Your query returned no results. Please try a different keyword\"\r\n                      })\r\n                    )\r\n                  })\r\n            }\r\n    }\r\n\r\nconst saveQueryRequest = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_REQUEST\",\r\n        })\r\n    }\r\n}\r\nconst saveQueryCancel = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_CANCEL\",\r\n        })\r\n    }\r\n}\r\nconst saveQueryConfirm = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_CONFIRM\",\r\n        })\r\n    }\r\n}\r\n\r\nconst loadSaved = (query) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_LOAD_SAVED\",\r\n            query: query\r\n        })\r\n    }\r\n}\r\n\r\nconst updateQuery = () => {\r\n\r\n}\r\n\r\nconst queryActions = {\r\n    queryRequest, saveQueryRequest, saveQueryCancel, saveQueryConfirm, loadSaved\r\n}\r\n\r\nexport default queryActions","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport queryActions from '../redux/actions/query'\r\n\r\nconst SearchBar = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const search = (e) => {\r\n        e.preventDefault()\r\n        const keyword = document.getElementById(\"searchField\").value\r\n        dispatch(queryActions.queryRequest(keyword))\r\n    }\r\n\r\n    return(\r\n        <div className=\"searchBar-wrapper\">\r\n            <form className=\"searchField-form\">\r\n                    <input \r\n                        className=\"searchField-input\"\r\n                        id=\"searchField\" \r\n                        type=\"search\" \r\n                        name=\"\" \r\n                        defaultValue=\"\" \r\n                        placeholder=\"enter your query\"\r\n                    />\r\n                <div className=\"searchBar-buttons-wrapper\">\r\n                    <input \r\n                        className=\"searchField-button button\"\r\n                        htmlFor=\"searchField\" \r\n                        type=\"submit\" \r\n                        value=\"Search\" \r\n                        onClick={(e) => search(e)}\r\n                    />\r\n                    {props.children}\r\n                </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar","const imageLoad = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"IMAGE_LOADING\",\r\n            id: value\r\n        })\r\n    }\r\n}\r\n\r\nexport default imageLoad","import React from 'react'\r\nimport imageLoad from '../redux/actions/imageLoad' \r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst ImagePreview = (props) => {\r\n    const dispatch = useDispatch()\r\n    const utm = \"?utm_source=image-search&utm_medium=referral\"\r\n    return(\r\n        <div className=\"photoPreview-container\">\r\n            <img src={props.photo.urls.thumb} alt={props.photo.description} onLoad={() =>{\r\n                console.log(`preview index ${props.index}`)\r\n                dispatch(imageLoad())\r\n                }}/>\r\n            <div className=\"photoPreview-attribution_wrapper\">\r\n                <div className=\"photoPreview-attribution\">\r\n                    <span>Photo by </span><a target=\"_blank\" rel=\"noopener noreferrer\" href={`${props.photo.links.html}/${utm}`}><em>{props.photo.user.username}</em></a><span> on </span><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://unsplash.com/${utm}`}><em>Unsplash</em></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePreview","const toggleModal = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"TOGGLE_MODAL\",\r\n            value: value\r\n        })\r\n    }\r\n}\r\n\r\nexport default toggleModal","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Loader = (props) => {\r\n    let progress = props.photos.loadProgress ? props.photos.loadProgress : 0\r\n    let length = props.photos.onDisplay && props.photos.onDisplay > 0 ? props.photos.onDisplay.length : 10\r\n    return(\r\n        <div className=\"loader-wrapper modal-box\">\r\n            <div className=\"loader-bar\">\r\n                <div className=\"loader-length\"></div>\r\n                <div \r\n                    className=\"loader-progress\"\r\n                    style={{width: `${(progress / length) * 100}%`}}\r\n                ></div>\r\n            </div>\r\n            <div className=\"loader-counter\">\r\n            <p>{!progress > 0 ? \"Initiating query...\" : `loading images: ${(progress / length) * 100}%`}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state.queries\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Loader) ","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport toggleModal from '../redux/actions/modalToggle'\r\nimport Loader from './Loader'\r\n\r\nconst ErrorModal = (props) => {\r\n    console.log(\"ERORR MODAL\")\r\n    console.log(props)\r\n    const dispatch = useDispatch()\r\n    return(\r\n        <div id=\"errorModal\" className={`modal-wrapper ${props.customClass ? props.customClass : \"\"} ${props.message || props.loading ? \"modal-message_display\" : \"\"}`}>\r\n            {\r\n                props.message ? \r\n                    <div className=\"modal-box\">\r\n                        <p>{props.message ? props.message : \"\"}</p>\r\n                        {\r\n                            props.message ? \r\n                            <div>\r\n                                {props.children}\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </div>\r\n                    : props.loading ?\r\n                    <Loader />\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//     photos: state.queries\r\n// })\r\n\r\n// export default connect(mapStateToProps, {})(ErrorModal) \r\nexport default ErrorModal","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport ImagePreview from './ImagePreview'\r\nimport ErrorModal from './ErrorModal'\r\nimport toggleModal from '../redux/actions/modalToggle'\r\n\r\nconst Gallery = (props) => {\r\n    const dispatch = useDispatch()\r\n    const queryKeyword = props.photos.query\r\n    const queryResult = props.photos.onDisplay\r\n        return(\r\n            <div className=\"gallery\">\r\n                \r\n                <ErrorModal \r\n                    message={props.photos.error}\r\n                    loading={props.photos.loading}\r\n                >\r\n                    <button className=\"button modal-button\"\r\n                        onClick={(e) => {\r\n                            dispatch(toggleModal(false))\r\n                        }}\r\n                    >OKAY\r\n                    </button>    \r\n                </ErrorModal>\r\n\r\n                    <div className=\"searchResults\">\r\n                        {\r\n                            queryKeyword && queryResult ? \r\n                                queryResult.map((photo, index) => {\r\n                                    return <ImagePreview \r\n                                                key={index}\r\n                                                photo={photo}\r\n                                            />\r\n                                }) :\r\n                                null\r\n                        }\r\n                    </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state.queries\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Gallery) ","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport queryActions from '../redux/actions/query'\r\nimport ErrorModal from './ErrorModal'\r\n\r\n\r\nconst SavedQueries = (props) => {\r\n    const dispatch = useDispatch()\r\n    return(\r\n            <div className=\"savedQueries-wrapper\" id=\"savedQueries\">\r\n                <div className=\"savedQueries-results\">\r\n                <ErrorModal \r\n                    customClass=\"savedQueries-modal\"\r\n                    message={props.queries.savePrompt}\r\n                >\r\n                        {\r\n                            !props.queries.savedQueries.includes(props.queries.query) ? \r\n\r\n                            <React.Fragment>\r\n                                <button className=\"button modal-button\"\r\n                                    onClick={(e) => {\r\n                                        dispatch(queryActions.saveQueryConfirm())\r\n                                    }}\r\n                                >\r\n                                    YES\r\n                                </button>   \r\n\r\n                                <button className=\"button modal-button\"\r\n                                    onClick={(e) => {\r\n                                        dispatch(queryActions.saveQueryCancel())\r\n                                    }}\r\n                                >\r\n                                    NO\r\n                                </button> \r\n                                </React.Fragment> :\r\n                                <button className=\"button modal-button\"\r\n                                    onClick={(e) => {\r\n                                        dispatch(queryActions.saveQueryCancel())\r\n                                    }}\r\n                                >\r\n                                    THANKS\r\n                                </button>\r\n\r\n                        }\r\n\r\n                </ErrorModal>\r\n                    <ul>\r\n                        {\r\n                            props.queries.savedQueries ?\r\n                                props.queries.savedQueries.map(query => {\r\n                                    return  <li key={`savedQuer-${query}`}>\r\n                                                <button\r\n                                                    className={\"savedQueries-button button\"}\r\n                                                    onClick={() => {\r\n                                                        dispatch(queryActions.loadSaved(query))\r\n                                                    }}\r\n                                                >\r\n                                                    {query}\r\n                                                </button>\r\n                                            </li>\r\n                                }) :\r\n                                null\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    queries: state.queries\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(SavedQueries) ","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport queryActions from '../redux/actions/query'\r\n\r\nconst SaveButton = (props) => {\r\n    const mobile = () => {\r\n        if(document.documentElement.clientWidth < 768){\r\n            return true\r\n        }\r\n        else return false;\r\n    }\r\n    const dispatch = useDispatch()\r\n\r\n    // window.addEventListener(\"resize\", () => {\r\n    //     console.log(\"resize\")\r\n    //     mobile = document.documentElement.clientWidth < 768 ? true : false;\r\n    //     })\r\n\r\n    return(\r\n        <div className=\"saveButton-wrapper\">\r\n            <button \r\n                className={`searchField-button button saveButton ${props.className}`}\r\n                onClick={(e) => {\r\n                    e.preventDefault()\r\n                        if(mobile()){\r\n                            document.getElementById(\"savedQueries\").classList.add(\"savedQueries-wrapper_display\")\r\n                        }\r\n                    dispatch(queryActions.saveQueryRequest())\r\n                }}\r\n            >\r\n                <span>SAVE</span>\r\n            </button>\r\n\r\n            <button \r\n                className=\"hamburger\"\r\n                onClick={(e) => {e.preventDefault(); document.getElementById(\"savedQueries\").classList.toggle(\"savedQueries-wrapper_display\")}}    \r\n            >\r\n                    <span role=\"img\" aria-label=\"hamburger icon\">🍔</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaveButton","import React from 'react';\r\n\r\nimport './css/main.css';\r\nimport SearchBar from './components/SearchBar';\r\nimport Gallery from './components/Gallery';\r\nimport SavedQueries from './components/SavedQueries';\r\nimport SaveButton from './components/SaveButton';\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n            <SearchBar>\r\n              <SaveButton />\r\n            </SearchBar>\r\n        <section className=\"main\">    \r\n            <Gallery />\r\n            <SavedQueries />\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default App\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n//store setup\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport combinedReducers from './redux/reducers/combinedReducers';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport './css/main.css';\r\nimport App from './App';\r\n\r\n\r\nconst initialState = {\r\n}\r\n\r\nconst store = createStore(\r\n    combinedReducers, \r\n    initialState,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>,\r\ndocument.getElementById('root')\r\n);"],"sourceRoot":""}