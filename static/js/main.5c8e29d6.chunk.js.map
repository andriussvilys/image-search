{"version":3,"sources":["redux/reducers/search.js","redux/reducers/combinedReducers.js","redux/actions/query.js","components/SearchBar.js","redux/actions/imageLoad.js","components/ImagePreview.js","redux/actions/modalToggle.js","components/Loader.js","components/ErrorModal.js","components/Gallery.js","components/SavedQueries.js","redux/actions/toggleBurger.js","components/Hamburger.js","components/SaveButton.js","App.js","index.js"],"names":["initialState","photos","error","loading","query","savedQueries","onDisplay","loadProgress","savePrompt","burgerActive","saveQuery","state","action","type","queryKeyword","payload","includes","length","console","log","value","combined","combineReducers","search","unsplash","Unsplash","require","default","accessKey","secret","queryActions","queryRequest","dispatch","orientation","then","toJson","res","results","catch","rej","saveQueryRequest","saveQueryCancel","saveQueryConfirm","loadSaved","SearchBar","props","useDispatch","className","id","name","defaultValue","placeholder","htmlFor","onClick","e","timer","preventDefault","document","getElementById","classList","contains","toggle","setTimeout","keyword","children","imageLoad","ImagePreview","utm","src","photo","urls","thumb","alt","description","onLoad","index","target","rel","href","links","html","user","username","toggleModal","connect","queries","progress","style","width","ErrorModal","customClass","message","queryResult","map","key","Fragment","toggleBurger","active","burger","marginTop","marginLeft","SaveButton","documentElement","clientWidth","add","App","store","createStore","combinedReducers","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.5c8e29d6.chunk.js","sourcesContent":["\r\nconst initialState = {\r\n    photos: {},\r\n    error: null,\r\n    loading: false,\r\n    query: null,\r\n    savedQueries: [],\r\n    onDisplay: [],\r\n    loadProgress: 0,\r\n    savePrompt: null,\r\n    burgerActive: false\r\n}\r\n\r\nconst saveQuery = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"QUERY_LOADING\":\r\n            if(action.queryKeyword === state.query){\r\n                return state\r\n            }\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                burgerActive: false,\r\n                loadProgress: 0\r\n            }\r\n        case \"QUERY_SUCCESS\":\r\n            return {\r\n                ...state, \r\n                photos: {\r\n                    ...state.photos,\r\n                    [action.queryKeyword]: action.payload\r\n                },\r\n                error: null,\r\n                query: action.queryKeyword,\r\n                loadProgress: 0,\r\n                onDisplay: action.payload\r\n            }\r\n        case \"QUERY_FAILURE\":\r\n            return {\r\n                ...state, \r\n                photos: {\r\n                    ...state.photos,\r\n                    [action.queryKeyword]: action.payload\r\n                },\r\n                error: action.error,\r\n                loading: false,\r\n                query: action.queryKeyword,\r\n                loadProgress: 0,\r\n                onDisplay: []\r\n            }\r\n        case \"QUERY_SAVE_REQUEST\":\r\n            if(!state.savedQueries.includes(state.query) && state.onDisplay.length > 0){\r\n                return {\r\n                    ...state, \r\n                    burgerActive: true,\r\n                    savePrompt: `Do you want to save \"${state.query}\" to favourites?`\r\n                }\r\n            }\r\n            else if(state.savedQueries.includes(state.query)){\r\n                return{\r\n                    ...state,\r\n                    loadProgress: 0,\r\n                    burgerActive: true,\r\n                    savePrompt: `\"${state.query}\" is already recorded`\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    loadProgress: 0,\r\n                    burgerActive: true,\r\n                    savePrompt: \"Nothing to save\"\r\n                }\r\n            }\r\n        case \"QUERY_SAVE_CONFIRM\":\r\n                if(!state.savedQueries.includes(state.query) && state.onDisplay.length > 0){\r\n                    return {\r\n                        ...state, \r\n                        photos: {\r\n                            ...state.photos,\r\n                            [action.queryKeyword]: action.payload\r\n                        },\r\n                        error: null,\r\n                        loading: false,\r\n                        loadProgress: 0,\r\n                        burgerActive: true,\r\n                        savedQueries: [...state.savedQueries, state.query],\r\n                        savePrompt: null\r\n                    }\r\n                }\r\n\r\n        case \"QUERY_SAVE_CANCEL\": \r\n            return {\r\n                ...state,\r\n                burgerActive: true,\r\n                savePrompt: null\r\n            }\r\n        case \"QUERY_LOAD_SAVED\":\r\n                return {\r\n                    ...state, \r\n                    onDisplay: state.photos[action.query],\r\n                    error: null,\r\n                    loadProgress: 0,\r\n                    query: action.query,\r\n                }\r\n        case \"IMAGE_LOADING\":\r\n            console.log(state.loadProgress)\r\n            console.log(state.onDisplay.length-1)\r\n            console.log(state.loadProgress === state.onDisplay.length-1)\r\n            if(state.loadProgress === state.onDisplay.length-1){                   \r\n                return {\r\n                    ...state,\r\n                    loadProgress: state.loadProgress+1,\r\n                    loading: false\r\n                }       \r\n            }\r\n            else{\r\n                console.log(\"ELSE\")\r\n                return {\r\n                    ...state,\r\n                    loading: true,\r\n                    loadProgress: state.loadProgress+1\r\n                }\r\n            }\r\n        case \"TOGGLE_MODAL\":\r\n            return {\r\n                ...state,\r\n                loading: action.value,\r\n                loadProgress: 0,\r\n                error: null,\r\n                // burgerActive: !state.burgerActive\r\n            }\r\n        case \"TOGGLE_BURGER\":\r\n            return {\r\n                ...state,\r\n                burgerActive: !state.burgerActive\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default saveQuery","import search from './search'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst combined = combineReducers({\r\n    \"queries\": search\r\n})\r\n\r\nexport default combined","import { toJson } from 'unsplash-js'\r\n\r\nconst Unsplash = require('unsplash-js').default;\r\n\r\nconst unsplash = new Unsplash({ \r\naccessKey: \"G30dGv3bmlBVahi1AuWqaLxS7g7f4x0bABqwPhd8hHs\",\r\nsecret: \"RhWCrY76VVhLkjHkrLDtkSYGgnaL3pb19YdHv2OveBw\"\r\n});\r\n\r\nconst queryRequest = (value) => {\r\n    return dispatch => {\r\n            dispatch({\r\n                type: \"QUERY_LOADING\",\r\n                queryKeyword: value,\r\n                error: null,\r\n                loading: true\r\n            })\r\n            return unsplash.search.photos(value, 1, 10, { orientation: \"portrait\" })\r\n                  .then(toJson)\r\n                  .then(res => {\r\n                    if(res.results.length > 0){\r\n                        dispatch({\r\n                            type: \"QUERY_SUCCESS\",\r\n                            payload: res.results,\r\n                            queryKeyword: value,\r\n                            error: null\r\n                        })\r\n                    }\r\n                    else{\r\n                        dispatch({\r\n                            type: \"QUERY_FAILURE\",\r\n                            payload: res.photos,\r\n                            queryKeyword: value,\r\n                            error: \"Your query returned no results. Please try a different keyword\"\r\n                        })\r\n                    }\r\n                  })\r\n                  .catch(rej => {\r\n                      return(\r\n                        dispatch({\r\n                          type: \"QUERY_FAILURE\",\r\n                          queryKeyword: value,\r\n                          error: \"Your query returned no results. Please try a different keyword\"\r\n                      })\r\n                    )\r\n                  })\r\n            }\r\n    }\r\n\r\nconst saveQueryRequest = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_REQUEST\",\r\n        })\r\n    }\r\n}\r\nconst saveQueryCancel = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_CANCEL\",\r\n        })\r\n    }\r\n}\r\nconst saveQueryConfirm = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_CONFIRM\",\r\n        })\r\n    }\r\n}\r\n\r\nconst loadSaved = (query) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_LOAD_SAVED\",\r\n            query: query\r\n        })\r\n    }\r\n}\r\n\r\nconst updateQuery = () => {\r\n\r\n}\r\n\r\nconst queryActions = {\r\n    queryRequest, saveQueryRequest, saveQueryCancel, saveQueryConfirm, loadSaved\r\n}\r\n\r\nexport default queryActions","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport queryActions from '../redux/actions/query'\r\n\r\nconst SearchBar = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const search = (e) => {\r\n        let timer = 0\r\n        e.preventDefault()\r\n        if(document.getElementById(\"savedQueries\").classList.contains(\"savedQueries-wrapper_display\")){\r\n            document.getElementById(\"savedQueries\").classList.toggle(\"savedQueries-wrapper_display\")\r\n            timer = 400\r\n        }\r\n        setTimeout(() => {            \r\n            const keyword = document.getElementById(\"searchField\").value\r\n            dispatch(queryActions.queryRequest(keyword))\r\n        }, timer);\r\n    }\r\n\r\n    return(\r\n        <div className=\"searchBar-wrapper\">\r\n            <form className=\"searchField-form\">\r\n                    <input \r\n                        className=\"searchField-input\"\r\n                        id=\"searchField\" \r\n                        type=\"search\" \r\n                        name=\"\" \r\n                        defaultValue=\"\" \r\n                        placeholder=\"enter your query\"\r\n                    />\r\n                <div className=\"searchBar-buttons-wrapper\">\r\n                    <input \r\n                        className=\"searchField-button button\"\r\n                        htmlFor=\"searchField\" \r\n                        type=\"submit\" \r\n                        value=\"Search\" \r\n                        onClick={(e) => search(e)}\r\n                    />\r\n                    {props.children}\r\n                </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar","const imageLoad = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"IMAGE_LOADING\",\r\n            id: value\r\n        })\r\n    }\r\n}\r\n\r\nexport default imageLoad","import React from 'react'\r\nimport imageLoad from '../redux/actions/imageLoad' \r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst ImagePreview = (props) => {\r\n    const dispatch = useDispatch()\r\n    const utm = \"?utm_source=image-search&utm_medium=referral\"\r\n    return(\r\n        <div className=\"photoPreview-container\">\r\n            <img src={props.photo.urls.thumb} alt={props.photo.description} onLoad={() =>{\r\n                console.log(`preview index ${props.index}`)\r\n                dispatch(imageLoad())\r\n                }}/>\r\n            <div className=\"photoPreview-attribution_wrapper\">\r\n                <div className=\"photoPreview-attribution\">\r\n                    <span>Photo by </span><a target=\"_blank\" rel=\"noopener noreferrer\" href={`${props.photo.links.html}/${utm}`}><em>{props.photo.user.username}</em></a><span> on </span><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://unsplash.com/${utm}`}><em>Unsplash</em></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePreview","const toggleModal = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"TOGGLE_MODAL\",\r\n            value: value\r\n        })\r\n    }\r\n}\r\n\r\nexport default toggleModal","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Loader = (props) => {\r\n    let progress = props.photos.loadProgress ? props.photos.loadProgress : 0\r\n    let length = props.photos.onDisplay && props.photos.onDisplay > 0 ? props.photos.onDisplay.length : 10\r\n    return(\r\n        <div className=\"loader-wrapper modal-box\">\r\n            <div className=\"loader-bar\">\r\n                <div className=\"loader-length\"></div>\r\n                <div \r\n                    className=\"loader-progress\"\r\n                    style={{width: `${(progress / length) * 100}%`}}\r\n                ></div>\r\n            </div>\r\n            <div className=\"loader-counter\">\r\n            <p>{!progress > 0 ? \"Initiating query...\" : `loading images: ${(progress / length) * 100}%`}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state.queries\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Loader) ","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport toggleModal from '../redux/actions/modalToggle'\r\nimport Loader from './Loader'\r\n\r\nconst ErrorModal = (props) => {\r\n    console.log(\"ERORR MODAL\")\r\n    console.log(props)\r\n    const dispatch = useDispatch()\r\n    return(\r\n        <div id=\"errorModal\" className={`modal-wrapper ${props.customClass ? props.customClass : \"\"} ${props.message || props.loading ? \"modal-message_display\" : \"\"}`}>\r\n            {\r\n                props.message ? \r\n                    <div className=\"modal-box\">\r\n                        <p>{props.message ? props.message : \"\"}</p>\r\n                        {\r\n                            props.message ? \r\n                            <div>\r\n                                {props.children}\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </div>\r\n                    : props.loading ?\r\n                    <Loader />\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//     photos: state.queries\r\n// })\r\n\r\n// export default connect(mapStateToProps, {})(ErrorModal) \r\nexport default ErrorModal","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport ImagePreview from './ImagePreview'\r\nimport ErrorModal from './ErrorModal'\r\nimport toggleModal from '../redux/actions/modalToggle'\r\n\r\nconst Gallery = (props) => {\r\n    const dispatch = useDispatch()\r\n    const queryKeyword = props.photos.query\r\n    const queryResult = props.photos.onDisplay\r\n        return(\r\n            <div className=\"gallery\">\r\n                \r\n                <ErrorModal \r\n                    message={props.photos.error}\r\n                    loading={props.photos.loading}\r\n                >\r\n                    <button className=\"button modal-button\"\r\n                        onClick={(e) => {\r\n                            dispatch(toggleModal(false))\r\n                        }}\r\n                    >OKAY\r\n                    </button>    \r\n                </ErrorModal>\r\n\r\n                    <div className=\"searchResults\">\r\n                        {\r\n                            queryKeyword && queryResult ? \r\n                                queryResult.map((photo, index) => {\r\n                                    return <ImagePreview \r\n                                                key={index}\r\n                                                photo={photo}\r\n                                            />\r\n                                }) :\r\n                                null\r\n                        }\r\n                    </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state.queries\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Gallery) ","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport queryActions from '../redux/actions/query'\r\nimport ErrorModal from './ErrorModal'\r\n\r\n\r\nconst SavedQueries = (props) => {\r\n    const dispatch = useDispatch()\r\n    return(\r\n            <div className=\"savedQueries-wrapper\" id=\"savedQueries\">\r\n                <div className=\"savedQueries-results\">\r\n                <ErrorModal \r\n                    customClass=\"savedQueries-modal\"\r\n                    message={props.queries.savePrompt}\r\n                >\r\n                        {\r\n                            props.queries.savedQueries.includes(props.queries.query) || !props.queries.query ? \r\n                            <button className=\"button modal-button\"\r\n                                onClick={(e) => {\r\n                                    dispatch(queryActions.saveQueryCancel())\r\n                                }}\r\n                            >\r\n                                OKAY\r\n                            </button>:\r\n\r\n                            <React.Fragment>\r\n                                <button className=\"button modal-button\"\r\n                                    onClick={(e) => {\r\n                                        dispatch(queryActions.saveQueryConfirm())\r\n                                    }}\r\n                                >\r\n                                    YES\r\n                                </button>   \r\n\r\n                                <button className=\"button modal-button\"\r\n                                    onClick={(e) => {\r\n                                        dispatch(queryActions.saveQueryCancel())\r\n                                    }}\r\n                                >\r\n                                    NO\r\n                                </button> \r\n                                </React.Fragment>\r\n                        }\r\n\r\n                </ErrorModal>\r\n                    <ul>\r\n                        {\r\n                            props.queries.savedQueries ?\r\n                                props.queries.savedQueries.map(query => {\r\n                                    return  <li key={`savedQuer-${query}`}>\r\n                                                <button\r\n                                                    className={\"savedQueries-button button\"}\r\n                                                    onClick={() => {\r\n                                                        dispatch(queryActions.loadSaved(query))\r\n                                                    }}\r\n                                                >\r\n                                                    {query}\r\n                                                </button>\r\n                                            </li>\r\n                                }) :\r\n                                null\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    queries: state.queries\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(SavedQueries) ","const toggleBurger = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"TOGGLE_BURGER\"\r\n        })\r\n    }\r\n}\r\n\r\nexport default toggleBurger","import Burger from 'react-css-burger';\r\nimport React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport toggleBurger from '../redux/actions/toggleBurger'\r\n \r\nconst Hamburger = (props) => {\r\n    const dispatch = useDispatch()\r\n    console.log(\"BURGER props\")\r\n    console.log(props)\r\n    let active = props.photos.burgerActive\r\n    return (\r\n      <Burger\r\n        onClick={(e) => {\r\n          e.preventDefault(); \r\n          active = !active\r\n          dispatch(toggleBurger())\r\n          document.getElementById(\"savedQueries\").classList.toggle(\"savedQueries-wrapper_display\")\r\n        }}\r\n        active={props.photos.burgerActive}\r\n        burger=\"vortex\"\r\n        marginTop={\"0\"}\r\n        marginLeft={\"0\"}\r\n      />\r\n    );\r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n    photos: state.queries\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Hamburger) ","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport queryActions from '../redux/actions/query'\r\nimport Hamburger from './Hamburger'\r\n\r\nconst SaveButton = (props) => {\r\n    const mobile = () => {\r\n        if(document.documentElement.clientWidth < 768){\r\n            return true\r\n        }\r\n        else return false;\r\n    }\r\n    const dispatch = useDispatch()\r\n\r\n    let burger = false\r\n\r\n    // window.addEventListener(\"resize\", () => {\r\n    //     console.log(\"resize\")\r\n    //     mobile = document.documentElement.clientWidth < 768 ? true : false;\r\n    //     })\r\n\r\n    return(\r\n        <div className=\"saveButton-wrapper\">\r\n            <button \r\n                className={`searchField-button button saveButton ${props.className}`}\r\n                onClick={(e) => {\r\n                    e.preventDefault()\r\n                        if(mobile()){\r\n                            document.getElementById(\"savedQueries\").classList.add(\"savedQueries-wrapper_display\")\r\n                        }\r\n                    dispatch(queryActions.saveQueryRequest())\r\n                }}\r\n            >\r\n                <span>SAVE</span>\r\n            </button>\r\n\r\n            <div className=\"hamburger\">\r\n                <Hamburger />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaveButton","import React from 'react';\r\n\r\nimport './css/main.css';\r\nimport SearchBar from './components/SearchBar';\r\nimport Gallery from './components/Gallery';\r\nimport SavedQueries from './components/SavedQueries';\r\nimport SaveButton from './components/SaveButton';\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n            <SearchBar>\r\n              <SaveButton />\r\n            </SearchBar>\r\n        <section className=\"main\">    \r\n            <Gallery />\r\n            <SavedQueries />\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default App\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n//store setup\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport combinedReducers from './redux/reducers/combinedReducers';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport './css/main.css';\r\nimport App from './App';\r\n\r\n\r\nconst initialState = {\r\n}\r\n\r\nconst store = createStore(\r\n    combinedReducers, \r\n    initialState,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>,\r\ndocument.getElementById('root')\r\n);"],"sourceRoot":""}