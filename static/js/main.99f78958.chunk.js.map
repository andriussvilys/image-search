{"version":3,"sources":["redux/initialState.js","redux/reducers/search.js","redux/reducers/combinedReducers.js","redux/actions/savedQueries.js","redux/actions/query.js","components/SearchBar.js","redux/actions/imageLoad.js","components/ImagePreview.js","components/Loader.js","components/ErrorModal.js","redux/actions/modalToggle.js","components/Gallery.js","components/SavedQueries.js","redux/actions/toggleBurger.js","components/Hamburger.js","components/SaveButton.js","App.js","index.js"],"names":["initialState","photos","error","loading","query","savedQueries","onDisplay","loadProgress","savePrompt","burgerActive","allIds","checkMobile","document","documentElement","clientWidth","combined","reduceReducers","state","action","type","Object","keys","indexOf","queryKeyword","payload","newState","id","length","value","saveActions","saveQueryRequest","dispatch","saveQueryCancel","saveQueryConfirm","loadSaved","unsplash","Unsplash","require","default","accessKey","secret","queryActions","queryRequest","search","orientation","then","toJson","res","results","catch","rej","newQuery","connect","props","useDispatch","className","name","placeholder","onChange","e","target","htmlFor","onClick","timer","preventDefault","getElementById","classList","contains","toggle","keyword","setTimeout","onMouseDown","add","onMouseUp","remove","children","imageLoad","utm","src","photo","urls","thumb","alt","description","onLoad","loaded","includes","rel","href","links","html","user","username","progress","style","width","ErrorModal","customClass","message","toggleModal","queryResult","map","index","key","queries","Fragment","toggleBurger","active","burger","marginTop","marginLeft","SaveButton","App","store","createStore","combinedReducers","compose","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.99f78958.chunk.js","sourcesContent":["const initialState = {\r\n    photos: {},\r\n    error: null,\r\n    loading: false,\r\n    query: \"\",\r\n    savedQueries: [],\r\n    onDisplay: [],\r\n    loadProgress: 0,\r\n    savePrompt: null,\r\n    burgerActive: false,\r\n    allIds: []\r\n}\r\n\r\nexport default initialState","\r\nimport initialState from '../initialState'\r\n\r\nconst checkMobile = () => {\r\n    if(document.documentElement.clientWidth < 769){\r\n        return true\r\n    }\r\n    else{return false}\r\n}\r\n\r\nexport const search = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"QUERY_LOADING\":\r\n            if(Object.keys(state.photos).indexOf(action.queryKeyword) > -1){\r\n                return {...state,\r\n                    onDisplay: state.photos[action.queryKeyword],\r\n                    burgerActive: false,\r\n                    loadProgress: 0\r\n                }\r\n            }\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                burgerActive: false,\r\n                loadProgress: 0\r\n            }\r\n        case \"QUERY_SUCCESS\":\r\n                // const newIds = action.payload.map(photo => photo.id)\r\n                // let combined = new Set([...state.allIds, ...newIds])\r\n                // combined = Array.from(combined)\r\n            return {\r\n                ...state, \r\n                photos: {\r\n                    ...state.photos,\r\n                    [action.queryKeyword]: action.payload\r\n                },\r\n                error: null,\r\n                query: action.queryKeyword,\r\n                loadProgress: 0,\r\n                onDisplay: action.payload,\r\n                // allIds: combined\r\n            }\r\n        case \"QUERY_FAILURE\":\r\n            return {\r\n                ...state, \r\n                photos: {\r\n                    ...state.photos,\r\n                    [action.queryKeyword]: action.payload\r\n                },\r\n                error: action.error,\r\n                loading: false,\r\n                query: action.queryKeyword,\r\n                loadProgress: 0,\r\n                onDisplay: []\r\n            }\r\n        case \"IMAGE_LOADING\":\r\n            let newState = {...state,\r\n                loading: true,\r\n                allIds: [...state.allIds, action.id]\r\n            }\r\n            newState.loadProgress = state.loadProgress+1\r\n            if(newState.loadProgress === state.onDisplay.length){\r\n                newState.loadProgress = 0\r\n                newState.loading = false\r\n            }\r\n            \r\n            return newState\r\n        case \"TOGGLE_MODAL\":\r\n            return {\r\n                ...state,\r\n                loading: action.value,\r\n                loadProgress: 0,\r\n                error: null,\r\n            }\r\n        case \"TOGGLE_BURGER\":\r\n            return {\r\n                ...state,\r\n                burgerActive: !state.burgerActive\r\n            }\r\n        case \"QUERY_NEW\":\r\n            return {\r\n                ...state,\r\n                query: action.value,\r\n                loadProgress: 0\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const savedQuery = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"QUERY_SAVE_REQUEST\":\r\n            if(state.savedQueries.indexOf(state.query) < 0 && state.onDisplay.length > 0){\r\n                return {\r\n                    ...state, \r\n                    burgerActive: checkMobile() ? true : false,\r\n                    savePrompt: `Do you want to save \"${state.query}\" to favourites?`\r\n                }\r\n            }\r\n            else if(state.savedQueries.indexOf(state.query) >= 0){\r\n                return{\r\n                    ...state,\r\n                    loadProgress: 0,\r\n                    burgerActive: checkMobile() ? true : false,\r\n                    savePrompt: `\"${state.query}\" is already recorded`\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    loadProgress: 0,\r\n                    burgerActive: checkMobile() ? true : false,\r\n                    savePrompt: \"Nothing to save\"\r\n                }\r\n            }\r\n        case \"QUERY_SAVE_CONFIRM\":\r\n                if(!state.savedQueries.indexOf(state.query) >=0 && state.onDisplay.length > 0){\r\n                    return {\r\n                        ...state, \r\n                        photos: {\r\n                            ...state.photos,\r\n                            [action.queryKeyword]: action.payload\r\n                        },\r\n                        error: null,\r\n                        loading: false,\r\n                        loadProgress: 0,\r\n                        burgerActive: checkMobile() ? true : false,\r\n                        savedQueries: [...state.savedQueries, state.query],\r\n                        savePrompt: null\r\n                    }\r\n                }\r\n                break\r\n        case \"QUERY_SAVE_CANCEL\": \r\n            return {\r\n                ...state,\r\n                burgerActive: checkMobile() ? true : false,\r\n                savePrompt: null\r\n            }\r\n        case \"QUERY_LOAD_SAVED\":\r\n                return {\r\n                    ...state, \r\n                    onDisplay: state.photos[action.query],\r\n                    error: null,\r\n                    loadProgress: 0,\r\n                    query: action.query,\r\n                }\r\n        default: return state\r\n    }\r\n}\r\n\r\n","import {search, savedQuery} from './search'\r\nimport reduceReducers from 'reduce-reducers'\r\nimport initialState from '../initialState'\r\n\r\nconst combined = reduceReducers(initialState, search, savedQuery)\r\nexport default combined","const saveQueryRequest = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_REQUEST\",\r\n        })\r\n    }\r\n}\r\nconst saveQueryCancel = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_CANCEL\",\r\n        })\r\n    }\r\n}\r\nconst saveQueryConfirm = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_CONFIRM\",\r\n        })\r\n    }\r\n}\r\n\r\nconst loadSaved = (query) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_LOAD_SAVED\",\r\n            query: query\r\n        })\r\n    }\r\n}\r\n\r\nconst saveActions = {\r\n    saveQueryRequest,\r\n    saveQueryCancel,\r\n    saveQueryConfirm,\r\n    loadSaved\r\n}\r\n\r\nexport default saveActions","import { toJson } from 'unsplash-js'\r\nimport savedQueries from './savedQueries'\r\n\r\nconst Unsplash = require('unsplash-js').default;\r\n\r\nconst unsplash = new Unsplash({ \r\naccessKey: \"G30dGv3bmlBVahi1AuWqaLxS7g7f4x0bABqwPhd8hHs\",\r\nsecret: \"RhWCrY76VVhLkjHkrLDtkSYGgnaL3pb19YdHv2OveBw\"\r\n});\r\n\r\nconst queryRequest = (value, state) => {\r\n    return dispatch => {\r\n        if(Object.keys(state.photos).indexOf(value) >= 0){\r\n            return dispatch({\r\n                    type: \"QUERY_LOAD_SAVED\",\r\n                    query: value\r\n                })\r\n            }\r\n            dispatch({\r\n                type: \"QUERY_LOADING\",\r\n                queryKeyword: value,\r\n                error: null,\r\n                loading: true,\r\n                loadProgress: 0\r\n            })\r\n            return unsplash.search.photos(value, 1, 10, { orientation: \"portrait\" })\r\n                  .then(toJson)\r\n                  .then(res => {\r\n                    if(res.results.length > 0){\r\n                        dispatch({\r\n                            type: \"QUERY_SUCCESS\",\r\n                            payload: res.results,\r\n                            queryKeyword: value,\r\n                            error: null,\r\n                            loadProgress: 0\r\n                        })\r\n                    }\r\n                    else{\r\n                        dispatch({\r\n                            type: \"QUERY_FAILURE\",\r\n                            payload: res.photos,\r\n                            queryKeyword: value,\r\n                            error: \"Your query returned no results. Please try a different keyword\",\r\n                            loadProgress: 0\r\n                        })\r\n                    }\r\n                  })\r\n                  .catch(rej => {\r\n                      return(\r\n                        dispatch({\r\n                          type: \"QUERY_FAILURE\",\r\n                          queryKeyword: value,\r\n                          error: \"Your query returned no results. Please try a different keyword\",\r\n                          loadProgress: 0\r\n                      })\r\n                    )\r\n                  })\r\n            }\r\n    }\r\nconst newQuery = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_NEW\",\r\n            value: value\r\n        })\r\n    }\r\n}\r\n\r\nconst queryActions = {\r\n    queryRequest, \r\n    savedQueries,\r\n    newQuery\r\n}\r\n\r\nexport default queryActions","import React from 'react';\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport queryActions from '../redux/actions/query'\r\n\r\nconst SearchBar = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const search = (e, state) => {\r\n        let timer = 0\r\n        e.preventDefault()\r\n        if(document.getElementById(\"savedQueries\").classList.contains(\"savedQueries-wrapper_display\")){\r\n            document.getElementById(\"savedQueries\").classList.toggle(\"savedQueries-wrapper_display\")\r\n            timer = 400\r\n        }\r\n        const keyword = document.getElementById(\"searchField\").value\r\n        setTimeout(() => {            \r\n            dispatch(queryActions.queryRequest(keyword, state))\r\n        }, timer);\r\n    }\r\n\r\n    return(\r\n        <div className=\"searchBar-wrapper\">\r\n            <form className=\"searchField-form\">\r\n                    <input \r\n                        className=\"searchField-input\"\r\n                        id=\"searchField\" \r\n                        type=\"search\" \r\n                        name=\"\" \r\n                        value={props.photos.query}\r\n                        placeholder=\"enter your query\"\r\n                        onChange={e => {\r\n                            dispatch(queryActions.newQuery(e.target.value))\r\n                        }}\r\n                    />\r\n                <div className=\"searchBar-buttons-wrapper\">\r\n                    <input \r\n                        className=\"searchField-button button\"\r\n                        htmlFor=\"searchField\" \r\n                        type=\"submit\" \r\n                        value=\"Search\" \r\n                        onClick={(e) => search(e, props.photos)}\r\n                        onMouseDown={e => e.target.classList.add('clicked')}\r\n                        onMouseUp={e => e.target.classList.remove('clicked')}\r\n                    />\r\n                    {props.children}\r\n                </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(SearchBar) ","const imageLoad = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"IMAGE_LOADING\",\r\n            id: value\r\n        })\r\n    }\r\n}\r\n\r\nexport default imageLoad","import React from 'react'\r\nimport imageLoad from '../redux/actions/imageLoad' \r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nconst ImagePreview = (props) => {\r\n    const dispatch = useDispatch()\r\n    const utm = \"?utm_source=image-search&utm_medium=referral\"\r\n    return(\r\n        <div className=\"photoPreview-container\">\r\n            <img src={props.photo.urls.thumb} alt={props.photo.description} onLoad={() =>{\r\n                let loaded = false\r\n                if(props.photos.allIds.includes(props.photo.id)){\r\n                    loaded = true\r\n                }\r\n                dispatch(imageLoad(props.photo.id, loaded))\r\n                }}/>\r\n            <div className=\"photoPreview-attribution_wrapper\">\r\n                <div className=\"photoPreview-attribution\">\r\n                    <span>Photo by </span><a target=\"_blank\" rel=\"noopener noreferrer\" href={`${props.photo.links.html}/${utm}`}><em>{props.photo.user.username}</em></a><span> on </span><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://unsplash.com/${utm}`}><em>Unsplash</em></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// export default ImagePreview\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(ImagePreview) ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Loader = (props) => {\r\n    let progress = props.photos.loadProgress\r\n    let length = props.photos.onDisplay.length\r\n    return(\r\n        <div className=\"loader-wrapper modal-box\">\r\n            <div className=\"loader-bar\">\r\n                <div className=\"loader-length\"></div>\r\n                <div \r\n                    className=\"loader-progress\"\r\n                    style={{width: `${(progress / length) * 100}%`}}\r\n                ></div>\r\n            </div>\r\n            <div className=\"loader-counter\">\r\n            <p>{!progress > 0 ? \"Initiating query...\" : `loading images: ${(progress / length) * 100}%`}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Loader) ","import React from 'react'\r\nimport Loader from './Loader'\r\n\r\nconst ErrorModal = (props) => {\r\n    return(\r\n        <div id=\"errorModal\" className={`modal-wrapper ${props.customClass ? props.customClass : \"\"} ${props.message || props.loading ? \"modal-message_display\" : \"\"}`}>\r\n            {\r\n                props.message ? \r\n                    <div className=\"modal-box\">\r\n                        <p>{props.message ? props.message : \"\"}</p>\r\n                        {\r\n                            props.message ? \r\n                            <div>\r\n                                {props.children}\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </div>\r\n                    : props.loading ?\r\n                    <Loader />\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorModal","const toggleModal = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"TOGGLE_MODAL\",\r\n            value: value\r\n        })\r\n    }\r\n}\r\n\r\nexport default toggleModal","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport ImagePreview from './ImagePreview'\r\nimport ErrorModal from './ErrorModal'\r\nimport toggleModal from '../redux/actions/modalToggle'\r\n\r\nconst Gallery = (props) => {\r\n    const dispatch = useDispatch()\r\n    const queryKeyword = props.photos.query\r\n    const queryResult = props.photos.onDisplay\r\n        return(\r\n            <div className=\"gallery\">\r\n                \r\n                <ErrorModal \r\n                    message={props.photos.error}\r\n                    loading={props.photos.loading}\r\n                >\r\n                    <button className=\"button modal-button\"\r\n                        onClick={(e) => {\r\n                            dispatch(toggleModal(false))\r\n                        }}\r\n                        onMouseDown={e => e.target.classList.add('clicked')}\r\n                        onMouseUp={e => e.target.classList.remove('clicked')}\r\n                    >OKAY\r\n                    </button>    \r\n                </ErrorModal>\r\n\r\n                    <div className=\"searchResults\">\r\n                        {\r\n                            queryKeyword && queryResult ? \r\n                                queryResult.map((photo, index) => {\r\n                                    return <ImagePreview \r\n                                                key={index}\r\n                                                photo={photo}\r\n                                            />\r\n                                }) :\r\n                                null\r\n                        }\r\n                    </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Gallery) ","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport queryActions from '../redux/actions/query'\r\nimport ErrorModal from './ErrorModal'\r\n\r\n\r\nconst SavedQueries = (props) => {\r\n    const dispatch = useDispatch()\r\n    return(\r\n            <div className=\"savedQueries-wrapper\" id=\"savedQueries\">\r\n                <div className=\"savedQueries-results\">\r\n                <ErrorModal \r\n                    customClass=\"savedQueries-modal\"\r\n                    message={props.queries.savePrompt}\r\n                >\r\n                        {\r\n                            props.queries.savedQueries.indexOf(props.queries.query) >= 0 || !props.queries.query || props.queries.onDisplay.length <= 0 ? \r\n                            <button className=\"button modal-button\"\r\n                                onClick={(e) => {\r\n                                    dispatch(queryActions.savedQueries.saveQueryCancel())\r\n                                }}\r\n                                onMouseDown={e => e.target.classList.add('clicked')}\r\n                                onMouseUp={e => e.target.classList.remove('clicked')}\r\n                            >\r\n                                OKAY\r\n                            </button>:\r\n\r\n                            <React.Fragment>\r\n                                <button className=\"button modal-button\"\r\n                                    onClick={(e) => {\r\n                                        dispatch(queryActions.savedQueries.saveQueryConfirm())\r\n                                    }}\r\n                                    onMouseDown={e => e.target.classList.add('clicked')}\r\n                                    onMouseUp={e => e.target.classList.remove('clicked')}\r\n                                >\r\n                                    YES\r\n                                </button>   \r\n\r\n                                <button className=\"button modal-button\"\r\n                                    onClick={(e) => {\r\n                                        dispatch(queryActions.savedQueries.saveQueryCancel())\r\n                                    }}\r\n                                    onMouseDown={e => e.target.classList.add('clicked')}\r\n                                    onMouseUp={e => e.target.classList.remove('clicked')}\r\n                                >\r\n                                    NO\r\n                                </button> \r\n                                </React.Fragment>\r\n                        }\r\n\r\n                </ErrorModal>\r\n                    <ul>\r\n                        {\r\n                            props.queries.savedQueries.length > 0 ?\r\n                                props.queries.savedQueries.map(query => {\r\n                                    return  <li key={`savedQuer-${query}`}>\r\n                                                <button\r\n                                                    className={\"savedQueries-button button\"}\r\n                                                    onClick={() => {\r\n                                                        dispatch(queryActions.savedQueries.loadSaved(query))\r\n                                                    }}\r\n                                                    onMouseDown={e => e.target.classList.add('clicked')}\r\n                                                    onMouseUp={e => e.target.classList.remove('clicked')}\r\n                                                >\r\n                                                    {query}\r\n                                                </button>\r\n                                            </li>\r\n                                }) :\r\n                                <li className=\"saveQueries-message\"><span>You haven't saved any queries yet.</span></li>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    queries: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(SavedQueries) ","const toggleBurger = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"TOGGLE_BURGER\"\r\n        })\r\n    }\r\n}\r\n\r\nexport default toggleBurger","import Burger from 'react-css-burger';\r\nimport React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport toggleBurger from '../redux/actions/toggleBurger'\r\n \r\nconst Hamburger = (props) => {\r\n    const dispatch = useDispatch()\r\n    let active = props.photos.burgerActive\r\n    return (\r\n      <Burger\r\n        onClick={(e) => {\r\n          e.preventDefault(); \r\n          active = !active\r\n          dispatch(toggleBurger())\r\n          document.getElementById(\"savedQueries\").classList.toggle(\"savedQueries-wrapper_display\")\r\n        }}\r\n        active={props.photos.burgerActive}\r\n        burger=\"vortex\"\r\n        marginTop={\"0\"}\r\n        marginLeft={\"0\"}\r\n      />\r\n    );\r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Hamburger) ","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport queryActions from '../redux/actions/query'\r\n// import savedQueries from '../redux/actions/savedQueries'\r\nimport Hamburger from './Hamburger'\r\n\r\nconst SaveButton = (props) => {\r\n    const mobile = () => {\r\n        if(document.documentElement.clientWidth < 768){\r\n            return true\r\n        }\r\n        else return false;\r\n    }\r\n    const dispatch = useDispatch()\r\n\r\n    return(\r\n        <div className=\"saveButton-wrapper\"\r\n        >\r\n            <button \r\n                className={`searchField-button button saveButton ${props.className}`}\r\n                onClick={(e) => {\r\n                    e.preventDefault()\r\n                        if(mobile()){\r\n                            document.getElementById(\"savedQueries\").classList.add(\"savedQueries-wrapper_display\")\r\n                        }\r\n                    dispatch(queryActions.savedQueries.saveQueryRequest())\r\n                }}\r\n                onMouseDown={e => e.target.classList.add('clicked')}\r\n                onMouseUp={e => e.target.classList.remove('clicked')}\r\n            >\r\n                SAVE\r\n            </button>\r\n\r\n            <div className=\"hamburger\">\r\n                <Hamburger />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaveButton","import React from 'react';\r\n\r\nimport './css/main.css';\r\nimport SearchBar from './components/SearchBar';\r\nimport Gallery from './components/Gallery';\r\nimport SavedQueries from './components/SavedQueries';\r\nimport SaveButton from './components/SaveButton';\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n            <SearchBar>\r\n              <SaveButton />\r\n            </SearchBar>\r\n        <section className=\"main\">    \r\n            <Gallery />\r\n            <SavedQueries />\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default App\r\n\r\n","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport initialState from './redux/initialState'\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport combinedReducers from './redux/reducers/combinedReducers';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport './css/main.css';\r\nimport App from './App';\r\n\r\n\r\nconst store = createStore(\r\n    combinedReducers, \r\n    initialState,\r\n    compose(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>,\r\ndocument.getElementById('root')\r\n);"],"sourceRoot":""}