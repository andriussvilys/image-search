{"version":3,"sources":["redux/initialState.js","redux/reducers/search.js","redux/reducers/combinedReducers.js","redux/actions/savedQueries.js","redux/actions/query.js","components/SearchBar.js","redux/actions/imageLoad.js","components/ImagePreview.js","components/Loader.js","components/ErrorModal.js","redux/actions/modalToggle.js","components/Gallery.js","components/SavedQueries.js","redux/actions/toggleBurger.js","components/Hamburger.js","components/SaveButton.js","App.js","index.js"],"names":["initialState","photos","error","loading","query","savedQueries","onDisplay","loadProgress","savePrompt","burgerActive","checkMobile","document","documentElement","clientWidth","combined","reduceReducers","state","action","type","queryKeyword","payload","length","value","indexOf","saveActions","saveQueryRequest","dispatch","saveQueryCancel","saveQueryConfirm","loadSaved","unsplash","Unsplash","require","default","accessKey","secret","queryActions","queryRequest","search","orientation","then","toJson","res","results","catch","rej","newQuery","connect","props","useDispatch","className","id","name","placeholder","onChange","e","target","htmlFor","onClick","timer","preventDefault","getElementById","classList","contains","toggle","setTimeout","keyword","onMouseDown","add","onMouseUp","remove","children","imageLoad","ImagePreview","utm","src","photo","urls","thumb","alt","description","onLoad","rel","href","links","html","user","username","progress","style","width","ErrorModal","customClass","message","toggleModal","queryResult","map","index","key","queries","Fragment","toggleBurger","active","burger","marginTop","marginLeft","SaveButton","App","store","createStore","combinedReducers","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.661a4cbc.chunk.js","sourcesContent":["const initialState = {\r\n    photos: {},\r\n    error: null,\r\n    loading: false,\r\n    query: \"\",\r\n    savedQueries: [],\r\n    onDisplay: [],\r\n    loadProgress: 0,\r\n    savePrompt: null,\r\n    burgerActive: false\r\n}\r\n\r\nexport default initialState","\r\nimport initialState from '../initialState'\r\n\r\nconst checkMobile = () => {\r\n    if(document.documentElement.clientWidth < 769){\r\n        return true\r\n    }\r\n    else{return false}\r\n}\r\n\r\nexport const search = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"QUERY_LOADING\":\r\n            if(action.queryKeyword === state.query){\r\n                return state\r\n            }\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                burgerActive: false,\r\n                loadProgress: 0\r\n            }\r\n        case \"QUERY_SUCCESS\":\r\n            return {\r\n                ...state, \r\n                photos: {\r\n                    ...state.photos,\r\n                    [action.queryKeyword]: action.payload\r\n                },\r\n                error: null,\r\n                query: action.queryKeyword,\r\n                loadProgress: 0,\r\n                onDisplay: action.payload\r\n            }\r\n        case \"QUERY_FAILURE\":\r\n            return {\r\n                ...state, \r\n                photos: {\r\n                    ...state.photos,\r\n                    [action.queryKeyword]: action.payload\r\n                },\r\n                error: action.error,\r\n                loading: false,\r\n                query: action.queryKeyword,\r\n                loadProgress: 0,\r\n                onDisplay: []\r\n            }\r\n        // case \"QUERY_SAVE_REQUEST\":\r\n        //     if(!state.savedQueries.indexOf(state.query) >= 0 && state.onDisplay.length > 0){\r\n        //         return {\r\n        //             ...state, \r\n        //             burgerActive: true,\r\n        //             savePrompt: `Do you want to save \"${state.query}\" to favourites?`\r\n        //         }\r\n        //     }\r\n        //     else if(state.savedQueries.indexOf(state.query) >= 0){\r\n        //         return{\r\n        //             ...state,\r\n        //             loadProgress: 0,\r\n        //             burgerActive: true,\r\n        //             savePrompt: `\"${state.query}\" is already recorded`\r\n        //         }\r\n        //     }\r\n        //     else{\r\n        //         return{\r\n        //             ...state,\r\n        //             loadProgress: 0,\r\n        //             burgerActive: true,\r\n        //             savePrompt: \"Nothing to save\"\r\n        //         }\r\n        //     }\r\n        // case \"QUERY_SAVE_CONFIRM\":\r\n        //         if(!state.savedQueries.indexOf(state.query) >=0 && state.onDisplay.length > 0){\r\n        //             return {\r\n        //                 ...state, \r\n        //                 photos: {\r\n        //                     ...state.photos,\r\n        //                     [action.queryKeyword]: action.payload\r\n        //                 },\r\n        //                 error: null,\r\n        //                 loading: false,\r\n        //                 loadProgress: 0,\r\n        //                 burgerActive: true,\r\n        //                 savedQueries: [...state.savedQueries, state.query],\r\n        //                 savePrompt: null\r\n        //             }\r\n        //         }\r\n        //         break\r\n        // case \"QUERY_SAVE_CANCEL\": \r\n        //     return {\r\n        //         ...state,\r\n        //         burgerActive: true,\r\n        //         savePrompt: null\r\n        //     }\r\n        // case \"QUERY_LOAD_SAVED\":\r\n        //         return {\r\n        //             ...state, \r\n        //             onDisplay: state.photos[action.query],\r\n        //             error: null,\r\n        //             loadProgress: 0,\r\n        //             query: action.query,\r\n        //         }\r\n        case \"IMAGE_LOADING\":\r\n            if(state.loadProgress === state.onDisplay.length-1){                   \r\n                return {\r\n                    ...state,\r\n                    loadProgress: state.loadProgress+1,\r\n                    loading: false\r\n                }       \r\n            }\r\n            else{\r\n                return {\r\n                    ...state,\r\n                    loading: true,\r\n                    loadProgress: state.loadProgress+1\r\n                }\r\n            }\r\n        case \"TOGGLE_MODAL\":\r\n            return {\r\n                ...state,\r\n                loading: action.value,\r\n                loadProgress: 0,\r\n                error: null,\r\n                // burgerActive: !state.burgerActive\r\n            }\r\n        case \"TOGGLE_BURGER\":\r\n            return {\r\n                ...state,\r\n                burgerActive: !state.burgerActive\r\n            }\r\n        case \"QUERY_NEW\":\r\n            return {\r\n                ...state,\r\n                query: action.value\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const savedQuery = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"QUERY_SAVE_REQUEST\":\r\n            if(state.savedQueries.indexOf(state.query) < 0 && state.onDisplay.length > 0){\r\n                return {\r\n                    ...state, \r\n                    burgerActive: checkMobile() ? true : false,\r\n                    savePrompt: `Do you want to save \"${state.query}\" to favourites?`\r\n                }\r\n            }\r\n            else if(state.savedQueries.indexOf(state.query) >= 0){\r\n                return{\r\n                    ...state,\r\n                    loadProgress: 0,\r\n                    burgerActive: checkMobile() ? true : false,\r\n                    savePrompt: `\"${state.query}\" is already recorded`\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    loadProgress: 0,\r\n                    burgerActive: checkMobile() ? true : false,\r\n                    savePrompt: \"Nothing to save\"\r\n                }\r\n            }\r\n        case \"QUERY_SAVE_CONFIRM\":\r\n                if(!state.savedQueries.indexOf(state.query) >=0 && state.onDisplay.length > 0){\r\n                    return {\r\n                        ...state, \r\n                        photos: {\r\n                            ...state.photos,\r\n                            [action.queryKeyword]: action.payload\r\n                        },\r\n                        error: null,\r\n                        loading: false,\r\n                        loadProgress: 0,\r\n                        burgerActive: checkMobile() ? true : false,\r\n                        savedQueries: [...state.savedQueries, state.query],\r\n                        savePrompt: null\r\n                    }\r\n                }\r\n                break\r\n        case \"QUERY_SAVE_CANCEL\": \r\n            return {\r\n                ...state,\r\n                burgerActive: checkMobile() ? true : false,\r\n                savePrompt: null\r\n            }\r\n        case \"QUERY_LOAD_SAVED\":\r\n                return {\r\n                    ...state, \r\n                    onDisplay: state.photos[action.query],\r\n                    error: null,\r\n                    loadProgress: 0,\r\n                    query: action.query,\r\n                }\r\n        default: return state\r\n    }\r\n}\r\n\r\n","import {search, savedQuery} from './search'\r\nimport reduceReducers from 'reduce-reducers'\r\nimport initialState from '../initialState'\r\n\r\nconst combined = reduceReducers(initialState, search, savedQuery)\r\nexport default combined","const saveQueryRequest = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_REQUEST\",\r\n        })\r\n    }\r\n}\r\nconst saveQueryCancel = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_CANCEL\",\r\n        })\r\n    }\r\n}\r\nconst saveQueryConfirm = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_CONFIRM\",\r\n        })\r\n    }\r\n}\r\n\r\nconst loadSaved = (query) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_LOAD_SAVED\",\r\n            query: query\r\n        })\r\n    }\r\n}\r\n\r\nconst saveActions = {\r\n    saveQueryRequest,\r\n    saveQueryCancel,\r\n    saveQueryConfirm,\r\n    loadSaved\r\n}\r\n\r\nexport default saveActions","import { toJson } from 'unsplash-js'\r\nimport savedQueries from './savedQueries'\r\n\r\nconst Unsplash = require('unsplash-js').default;\r\n\r\nconst unsplash = new Unsplash({ \r\naccessKey: \"G30dGv3bmlBVahi1AuWqaLxS7g7f4x0bABqwPhd8hHs\",\r\nsecret: \"RhWCrY76VVhLkjHkrLDtkSYGgnaL3pb19YdHv2OveBw\"\r\n});\r\n\r\nconst queryRequest = (value) => {\r\n    return dispatch => {\r\n            dispatch({\r\n                type: \"QUERY_LOADING\",\r\n                queryKeyword: value,\r\n                error: null,\r\n                loading: true\r\n            })\r\n            return unsplash.search.photos(value, 1, 10, { orientation: \"portrait\" })\r\n                  .then(toJson)\r\n                  .then(res => {\r\n                    if(res.results.length > 0){\r\n                        dispatch({\r\n                            type: \"QUERY_SUCCESS\",\r\n                            payload: res.results,\r\n                            queryKeyword: value,\r\n                            error: null\r\n                        })\r\n                    }\r\n                    else{\r\n                        dispatch({\r\n                            type: \"QUERY_FAILURE\",\r\n                            payload: res.photos,\r\n                            queryKeyword: value,\r\n                            error: \"Your query returned no results. Please try a different keyword\"\r\n                        })\r\n                    }\r\n                  })\r\n                  .catch(rej => {\r\n                      return(\r\n                        dispatch({\r\n                          type: \"QUERY_FAILURE\",\r\n                          queryKeyword: value,\r\n                          error: \"Your query returned no results. Please try a different keyword\"\r\n                      })\r\n                    )\r\n                  })\r\n            }\r\n    }\r\nconst newQuery = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_NEW\",\r\n            value: value\r\n        })\r\n    }\r\n}\r\n\r\nconst queryActions = {\r\n    queryRequest, \r\n    savedQueries,\r\n    newQuery\r\n}\r\n\r\nexport default queryActions","import React from 'react';\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport queryActions from '../redux/actions/query'\r\n\r\nconst SearchBar = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const search = (e) => {\r\n        let timer = 0\r\n        e.preventDefault()\r\n        if(document.getElementById(\"savedQueries\").classList.contains(\"savedQueries-wrapper_display\")){\r\n            document.getElementById(\"savedQueries\").classList.toggle(\"savedQueries-wrapper_display\")\r\n            timer = 400\r\n        }\r\n        setTimeout(() => {            \r\n            const keyword = document.getElementById(\"searchField\").value\r\n            dispatch(queryActions.queryRequest(keyword))\r\n        }, timer);\r\n    }\r\n\r\n    return(\r\n        <div className=\"searchBar-wrapper\">\r\n            <form className=\"searchField-form\">\r\n                    <input \r\n                        className=\"searchField-input\"\r\n                        id=\"searchField\" \r\n                        type=\"search\" \r\n                        name=\"\" \r\n                        value={props.photos.query}\r\n                        placeholder=\"enter your query\"\r\n                        onChange={e => {\r\n                            dispatch(queryActions.newQuery(e.target.value))\r\n                        }}\r\n                    />\r\n                <div className=\"searchBar-buttons-wrapper\">\r\n                    <input \r\n                        className=\"searchField-button button\"\r\n                        htmlFor=\"searchField\" \r\n                        type=\"submit\" \r\n                        value=\"Search\" \r\n                        onClick={(e) => search(e)}\r\n                        onMouseDown={e => e.target.classList.add('clicked')}\r\n                        onMouseUp={e => e.target.classList.remove('clicked')}\r\n                    />\r\n                    {props.children}\r\n                </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(SearchBar) ","const imageLoad = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"IMAGE_LOADING\",\r\n            id: value\r\n        })\r\n    }\r\n}\r\n\r\nexport default imageLoad","import React from 'react'\r\nimport imageLoad from '../redux/actions/imageLoad' \r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst ImagePreview = (props) => {\r\n    const dispatch = useDispatch()\r\n    const utm = \"?utm_source=image-search&utm_medium=referral\"\r\n    return(\r\n        <div className=\"photoPreview-container\">\r\n            <img src={props.photo.urls.thumb} alt={props.photo.description} onLoad={() =>{\r\n                dispatch(imageLoad())\r\n                }}/>\r\n            <div className=\"photoPreview-attribution_wrapper\">\r\n                <div className=\"photoPreview-attribution\">\r\n                    <span>Photo by </span><a target=\"_blank\" rel=\"noopener noreferrer\" href={`${props.photo.links.html}/${utm}`}><em>{props.photo.user.username}</em></a><span> on </span><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://unsplash.com/${utm}`}><em>Unsplash</em></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePreview","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Loader = (props) => {\r\n    let progress = props.photos.loadProgress ? props.photos.loadProgress : 0\r\n    let length = props.photos.onDisplay && props.photos.onDisplay > 0 ? props.photos.onDisplay.length : 10\r\n    return(\r\n        <div className=\"loader-wrapper modal-box\">\r\n            <div className=\"loader-bar\">\r\n                <div className=\"loader-length\"></div>\r\n                <div \r\n                    className=\"loader-progress\"\r\n                    style={{width: `${(progress / length) * 100}%`}}\r\n                ></div>\r\n            </div>\r\n            <div className=\"loader-counter\">\r\n            <p>{!progress > 0 ? \"Initiating query...\" : `loading images: ${(progress / length) * 100}%`}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Loader) ","import React from 'react'\r\nimport Loader from './Loader'\r\n\r\nconst ErrorModal = (props) => {\r\n    return(\r\n        <div id=\"errorModal\" className={`modal-wrapper ${props.customClass ? props.customClass : \"\"} ${props.message || props.loading ? \"modal-message_display\" : \"\"}`}>\r\n            {\r\n                props.message ? \r\n                    <div className=\"modal-box\">\r\n                        <p>{props.message ? props.message : \"\"}</p>\r\n                        {\r\n                            props.message ? \r\n                            <div>\r\n                                {props.children}\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </div>\r\n                    : props.loading ?\r\n                    <Loader />\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorModal","const toggleModal = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"TOGGLE_MODAL\",\r\n            value: value\r\n        })\r\n    }\r\n}\r\n\r\nexport default toggleModal","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport ImagePreview from './ImagePreview'\r\nimport ErrorModal from './ErrorModal'\r\nimport toggleModal from '../redux/actions/modalToggle'\r\n\r\nconst Gallery = (props) => {\r\n    const dispatch = useDispatch()\r\n    const queryKeyword = props.photos.query\r\n    const queryResult = props.photos.onDisplay\r\n        return(\r\n            <div className=\"gallery\">\r\n                \r\n                <ErrorModal \r\n                    message={props.photos.error}\r\n                    loading={props.photos.loading}\r\n                >\r\n                    <button className=\"button modal-button\"\r\n                        onClick={(e) => {\r\n                            dispatch(toggleModal(false))\r\n                        }}\r\n                        onMouseDown={e => e.target.classList.add('clicked')}\r\n                        onMouseUp={e => e.target.classList.remove('clicked')}\r\n                    >OKAY\r\n                    </button>    \r\n                </ErrorModal>\r\n\r\n                    <div className=\"searchResults\">\r\n                        {\r\n                            queryKeyword && queryResult ? \r\n                                queryResult.map((photo, index) => {\r\n                                    return <ImagePreview \r\n                                                key={index}\r\n                                                photo={photo}\r\n                                            />\r\n                                }) :\r\n                                null\r\n                        }\r\n                    </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Gallery) ","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport queryActions from '../redux/actions/query'\r\nimport ErrorModal from './ErrorModal'\r\n\r\n\r\nconst SavedQueries = (props) => {\r\n    const dispatch = useDispatch()\r\n    return(\r\n            <div className=\"savedQueries-wrapper\" id=\"savedQueries\">\r\n                <div className=\"savedQueries-results\">\r\n                <ErrorModal \r\n                    customClass=\"savedQueries-modal\"\r\n                    message={props.queries.savePrompt}\r\n                >\r\n                        {\r\n                            props.queries.savedQueries.indexOf(props.queries.query) >= 0 || !props.queries.query || props.queries.onDisplay.length <= 0 ? \r\n                            <button className=\"button modal-button\"\r\n                                onClick={(e) => {\r\n                                    dispatch(queryActions.savedQueries.saveQueryCancel())\r\n                                }}\r\n                                onMouseDown={e => e.target.classList.add('clicked')}\r\n                                onMouseUp={e => e.target.classList.remove('clicked')}\r\n                            >\r\n                                OKAY\r\n                            </button>:\r\n\r\n                            <React.Fragment>\r\n                                <button className=\"button modal-button\"\r\n                                    onClick={(e) => {\r\n                                        dispatch(queryActions.savedQueries.saveQueryConfirm())\r\n                                    }}\r\n                                    onMouseDown={e => e.target.classList.add('clicked')}\r\n                                    onMouseUp={e => e.target.classList.remove('clicked')}\r\n                                >\r\n                                    YES\r\n                                </button>   \r\n\r\n                                <button className=\"button modal-button\"\r\n                                    onClick={(e) => {\r\n                                        dispatch(queryActions.savedQueries.saveQueryCancel())\r\n                                    }}\r\n                                    onMouseDown={e => e.target.classList.add('clicked')}\r\n                                    onMouseUp={e => e.target.classList.remove('clicked')}\r\n                                >\r\n                                    NO\r\n                                </button> \r\n                                </React.Fragment>\r\n                        }\r\n\r\n                </ErrorModal>\r\n                    <ul>\r\n                        {\r\n                            props.queries.savedQueries.length > 0 ?\r\n                                props.queries.savedQueries.map(query => {\r\n                                    return  <li key={`savedQuer-${query}`}>\r\n                                                <button\r\n                                                    className={\"savedQueries-button button\"}\r\n                                                    onClick={() => {\r\n                                                        dispatch(queryActions.savedQueries.loadSaved(query))\r\n                                                    }}\r\n                                                    onMouseDown={e => e.target.classList.add('clicked')}\r\n                                                    onMouseUp={e => e.target.classList.remove('clicked')}\r\n                                                >\r\n                                                    {query}\r\n                                                </button>\r\n                                            </li>\r\n                                }) :\r\n                                <li className=\"saveQueries-message\"><span>You haven't saved any queries yet.</span></li>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    queries: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(SavedQueries) ","const toggleBurger = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"TOGGLE_BURGER\"\r\n        })\r\n    }\r\n}\r\n\r\nexport default toggleBurger","import Burger from 'react-css-burger';\r\nimport React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport toggleBurger from '../redux/actions/toggleBurger'\r\n \r\nconst Hamburger = (props) => {\r\n    const dispatch = useDispatch()\r\n    let active = props.photos.burgerActive\r\n    return (\r\n      <Burger\r\n        onClick={(e) => {\r\n          e.preventDefault(); \r\n          active = !active\r\n          dispatch(toggleBurger())\r\n          document.getElementById(\"savedQueries\").classList.toggle(\"savedQueries-wrapper_display\")\r\n        }}\r\n        active={props.photos.burgerActive}\r\n        burger=\"vortex\"\r\n        marginTop={\"0\"}\r\n        marginLeft={\"0\"}\r\n      />\r\n    );\r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Hamburger) ","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport queryActions from '../redux/actions/query'\r\n// import savedQueries from '../redux/actions/savedQueries'\r\nimport Hamburger from './Hamburger'\r\n\r\nconst SaveButton = (props) => {\r\n    const mobile = () => {\r\n        if(document.documentElement.clientWidth < 768){\r\n            return true\r\n        }\r\n        else return false;\r\n    }\r\n    const dispatch = useDispatch()\r\n\r\n    return(\r\n        <div className=\"saveButton-wrapper\"\r\n        >\r\n            <button \r\n                className={`searchField-button button saveButton ${props.className}`}\r\n                onClick={(e) => {\r\n                    e.preventDefault()\r\n                        if(mobile()){\r\n                            document.getElementById(\"savedQueries\").classList.add(\"savedQueries-wrapper_display\")\r\n                        }\r\n                    dispatch(queryActions.savedQueries.saveQueryRequest())\r\n                }}\r\n                onMouseDown={e => e.target.classList.add('clicked')}\r\n                onMouseUp={e => e.target.classList.remove('clicked')}\r\n            >\r\n                SAVE\r\n            </button>\r\n\r\n            <div className=\"hamburger\">\r\n                <Hamburger />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaveButton","import React from 'react';\r\n\r\nimport './css/main.css';\r\nimport SearchBar from './components/SearchBar';\r\nimport Gallery from './components/Gallery';\r\nimport SavedQueries from './components/SavedQueries';\r\nimport SaveButton from './components/SaveButton';\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n            <SearchBar>\r\n              <SaveButton />\r\n            </SearchBar>\r\n        <section className=\"main\">    \r\n            <Gallery />\r\n            <SavedQueries />\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default App\r\n\r\n","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport initialState from './redux/initialState'\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport combinedReducers from './redux/reducers/combinedReducers';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport './css/main.css';\r\nimport App from './App';\r\n\r\n\r\nconst store = createStore(\r\n    combinedReducers, \r\n    initialState,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>,\r\ndocument.getElementById('root')\r\n);"],"sourceRoot":""}