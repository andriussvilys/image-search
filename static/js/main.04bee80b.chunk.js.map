{"version":3,"sources":["redux/initialState.js","redux/reducers/search.js","redux/reducers/combinedReducers.js","redux/actions/savedQueries.js","redux/actions/query.js","components/SearchBar.js","redux/actions/imageLoad.js","components/ImagePreview.js","components/Loader.js","components/ErrorModal.js","redux/actions/modalToggle.js","components/Gallery.js","components/SavedQueries.js","redux/actions/toggleBurger.js","components/Hamburger.js","components/SaveButton.js","App.js","index.js"],"names":["initialState","photos","error","loading","query","savedQueries","onDisplay","loadProgress","savePrompt","burgerActive","allIds","loadLength","checkMobile","document","documentElement","clientWidth","combined","reduceReducers","state","action","type","Object","keys","indexOf","queryKeyword","previouslyLoaded","payload","filter","obj","includes","id","length","console","log","newState","value","saveActions","saveQueryRequest","dispatch","saveQueryCancel","saveQueryConfirm","loadSaved","unsplash","Unsplash","require","default","accessKey","secret","queryActions","queryRequest","search","orientation","then","toJson","res","results","catch","rej","newQuery","connect","props","useDispatch","className","name","placeholder","onChange","e","target","htmlFor","onClick","timer","preventDefault","getElementById","classList","contains","toggle","keyword","setTimeout","onMouseDown","add","onMouseUp","remove","children","imageLoad","utm","src","photo","urls","thumb","alt","description","onLoad","loaded","rel","href","links","html","user","username","progress","style","width","Math","round","ErrorModal","customClass","message","toggleModal","queryResult","map","index","key","queries","Fragment","toggleBurger","active","burger","marginTop","marginLeft","SaveButton","App","store","createStore","combinedReducers","compose","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.04bee80b.chunk.js","sourcesContent":["const initialState = {\r\n    photos: {},\r\n    error: null,\r\n    loading: false,\r\n    query: \"\",\r\n    savedQueries: [],\r\n    onDisplay: [],\r\n    loadProgress: 0,\r\n    savePrompt: null,\r\n    burgerActive: false,\r\n    allIds: [],\r\n    loadLength: null\r\n}\r\n\r\nexport default initialState","\r\nimport initialState from '../initialState'\r\n\r\nconst checkMobile = () => {\r\n    if(document.documentElement.clientWidth < 769){\r\n        return true\r\n    }\r\n    else{return false}\r\n}\r\n\r\nexport const search = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"QUERY_LOADING\":\r\n            if(Object.keys(state.photos).indexOf(action.queryKeyword) > -1){\r\n                return {...state,\r\n                    onDisplay: state.photos[action.queryKeyword],\r\n                    burgerActive: false,\r\n                    loadProgress: 0\r\n                }\r\n            }\r\n            return {\r\n                ...state, \r\n                loading: true,\r\n                burgerActive: false,\r\n                loadProgress: 0\r\n            }\r\n        case \"QUERY_SUCCESS\":\r\n                const previouslyLoaded = action.payload.filter(obj => !state.allIds.includes(obj.id)) \r\n                let length = previouslyLoaded.length-1\r\n                console.log(\"query success\")\r\n                console.log(length)\r\n            return {\r\n                ...state, \r\n                photos: {\r\n                    ...state.photos,\r\n                    [action.queryKeyword]: action.payload\r\n                },\r\n                error: null,\r\n                query: action.queryKeyword,\r\n                loadProgress: 0,\r\n                onDisplay: action.payload,\r\n                loadLength: length\r\n                // allIds: combined\r\n            }\r\n        case \"QUERY_FAILURE\":\r\n            return {\r\n                ...state, \r\n                photos: {\r\n                    ...state.photos,\r\n                    [action.queryKeyword]: action.payload\r\n                },\r\n                error: action.error,\r\n                loading: false,\r\n                query: action.queryKeyword,\r\n                loadProgress: 0,\r\n                onDisplay: []\r\n            }\r\n        case \"IMAGE_LOADING\":\r\n            if(state.loadProgress === state.loadLength){\r\n                return state\r\n            }\r\n            let newState = {...state,\r\n                loading: true,\r\n                allIds: [...state.allIds, action.id]\r\n            }\r\n            newState.loadProgress = state.loadProgress+1\r\n            console.log(newState.loadLength)\r\n            if(newState.loadProgress === newState.loadLength){\r\n                newState.loading = false\r\n            }\r\n            return newState\r\n        case \"TOGGLE_MODAL\":\r\n            return {\r\n                ...state,\r\n                loading: action.value,\r\n                loadProgress: 0,\r\n                error: null,\r\n            }\r\n        case \"TOGGLE_BURGER\":\r\n            return {\r\n                ...state,\r\n                burgerActive: !state.burgerActive\r\n            }\r\n        case \"QUERY_NEW\":\r\n            return {\r\n                ...state,\r\n                query: action.value,\r\n                loadProgress: 0\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const savedQuery = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"QUERY_SAVE_REQUEST\":\r\n            if(state.savedQueries.indexOf(state.query) < 0 && state.onDisplay.length > 0){\r\n                return {\r\n                    ...state, \r\n                    burgerActive: checkMobile() ? true : false,\r\n                    savePrompt: `Do you want to save \"${state.query}\" to favourites?`\r\n                }\r\n            }\r\n            else if(state.savedQueries.indexOf(state.query) >= 0){\r\n                return{\r\n                    ...state,\r\n                    loadProgress: 0,\r\n                    burgerActive: checkMobile() ? true : false,\r\n                    savePrompt: `\"${state.query}\" is already recorded`\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    loadProgress: 0,\r\n                    burgerActive: checkMobile() ? true : false,\r\n                    savePrompt: \"Nothing to save\"\r\n                }\r\n            }\r\n        case \"QUERY_SAVE_CONFIRM\":\r\n                if(!state.savedQueries.indexOf(state.query) >=0 && state.onDisplay.length > 0){\r\n                    return {\r\n                        ...state, \r\n                        photos: {\r\n                            ...state.photos,\r\n                            [action.queryKeyword]: action.payload\r\n                        },\r\n                        error: null,\r\n                        loading: false,\r\n                        loadProgress: 0,\r\n                        burgerActive: checkMobile() ? true : false,\r\n                        savedQueries: [...state.savedQueries, state.query],\r\n                        savePrompt: null\r\n                    }\r\n                }\r\n                break\r\n        case \"QUERY_SAVE_CANCEL\": \r\n            return {\r\n                ...state,\r\n                burgerActive: checkMobile() ? true : false,\r\n                savePrompt: null\r\n            }\r\n        case \"QUERY_LOAD_SAVED\":\r\n                return {\r\n                    ...state, \r\n                    onDisplay: state.photos[action.query],\r\n                    error: null,\r\n                    loadProgress: 0,\r\n                    query: action.query,\r\n                }\r\n        default: return state\r\n    }\r\n}\r\n\r\n","import {search, savedQuery} from './search'\r\nimport reduceReducers from 'reduce-reducers'\r\nimport initialState from '../initialState'\r\n\r\nconst combined = reduceReducers(initialState, search, savedQuery)\r\nexport default combined","const saveQueryRequest = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_REQUEST\",\r\n        })\r\n    }\r\n}\r\nconst saveQueryCancel = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_CANCEL\",\r\n        })\r\n    }\r\n}\r\nconst saveQueryConfirm = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_SAVE_CONFIRM\",\r\n        })\r\n    }\r\n}\r\n\r\nconst loadSaved = (query) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_LOAD_SAVED\",\r\n            query: query\r\n        })\r\n    }\r\n}\r\n\r\nconst saveActions = {\r\n    saveQueryRequest,\r\n    saveQueryCancel,\r\n    saveQueryConfirm,\r\n    loadSaved\r\n}\r\n\r\nexport default saveActions","import { toJson } from 'unsplash-js'\r\nimport savedQueries from './savedQueries'\r\n\r\nconst Unsplash = require('unsplash-js').default;\r\n\r\nconst unsplash = new Unsplash({ \r\naccessKey: \"G30dGv3bmlBVahi1AuWqaLxS7g7f4x0bABqwPhd8hHs\",\r\nsecret: \"RhWCrY76VVhLkjHkrLDtkSYGgnaL3pb19YdHv2OveBw\"\r\n});\r\n\r\nconst queryRequest = (value, state) => {\r\n    return dispatch => {\r\n        if(Object.keys(state.photos).indexOf(value) >= 0){\r\n            return dispatch({\r\n                    type: \"QUERY_LOAD_SAVED\",\r\n                    query: value\r\n                })\r\n            }\r\n            dispatch({\r\n                type: \"QUERY_LOADING\",\r\n                queryKeyword: value,\r\n                error: null,\r\n                loading: true,\r\n                loadProgress: 0\r\n            })\r\n            return unsplash.search.photos(value, 1, 10, { orientation: \"portrait\" })\r\n                  .then(toJson)\r\n                  .then(res => {\r\n                    if(res.results.length > 0){\r\n                        dispatch({\r\n                            type: \"QUERY_SUCCESS\",\r\n                            payload: res.results,\r\n                            queryKeyword: value,\r\n                            error: null,\r\n                            loadProgress: 0\r\n                        })\r\n                    }\r\n                    else{\r\n                        dispatch({\r\n                            type: \"QUERY_FAILURE\",\r\n                            payload: res.photos,\r\n                            queryKeyword: value,\r\n                            error: \"Your query returned no results. Please try a different keyword\",\r\n                            loadProgress: 0\r\n                        })\r\n                    }\r\n                  })\r\n                  .catch(rej => {\r\n                      return(\r\n                        dispatch({\r\n                          type: \"QUERY_FAILURE\",\r\n                          queryKeyword: value,\r\n                          error: \"Your query returned no results. Please try a different keyword\",\r\n                          loadProgress: 0\r\n                      })\r\n                    )\r\n                  })\r\n            }\r\n    }\r\nconst newQuery = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"QUERY_NEW\",\r\n            value: value\r\n        })\r\n    }\r\n}\r\n\r\nconst queryActions = {\r\n    queryRequest, \r\n    savedQueries,\r\n    newQuery\r\n}\r\n\r\nexport default queryActions","import React from 'react';\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport queryActions from '../redux/actions/query'\r\n\r\nconst SearchBar = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const search = (e, state) => {\r\n        let timer = 0\r\n        e.preventDefault()\r\n        if(document.getElementById(\"savedQueries\").classList.contains(\"savedQueries-wrapper_display\")){\r\n            document.getElementById(\"savedQueries\").classList.toggle(\"savedQueries-wrapper_display\")\r\n            timer = 400\r\n        }\r\n        const keyword = document.getElementById(\"searchField\").value\r\n        setTimeout(() => {            \r\n            dispatch(queryActions.queryRequest(keyword, state))\r\n        }, timer);\r\n    }\r\n\r\n    return(\r\n        <div className=\"searchBar-wrapper\">\r\n            <form className=\"searchField-form\">\r\n                    <input \r\n                        className=\"searchField-input\"\r\n                        id=\"searchField\" \r\n                        type=\"search\" \r\n                        name=\"\" \r\n                        value={props.photos.query}\r\n                        placeholder=\"enter your query\"\r\n                        onChange={e => {\r\n                            dispatch(queryActions.newQuery(e.target.value))\r\n                        }}\r\n                    />\r\n                <div className=\"searchBar-buttons-wrapper\">\r\n                    <input \r\n                        className=\"searchField-button button\"\r\n                        htmlFor=\"searchField\" \r\n                        type=\"submit\" \r\n                        value=\"Search\" \r\n                        onClick={(e) => search(e, props.photos)}\r\n                        onMouseDown={e => e.target.classList.add('clicked')}\r\n                        onMouseUp={e => e.target.classList.remove('clicked')}\r\n                    />\r\n                    {props.children}\r\n                </div>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(SearchBar) ","const imageLoad = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"IMAGE_LOADING\",\r\n            id: value\r\n        })\r\n    }\r\n}\r\n\r\nexport default imageLoad","import React from 'react'\r\nimport imageLoad from '../redux/actions/imageLoad' \r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nconst ImagePreview = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const utm = \"?utm_source=image-search&utm_medium=referral\"\r\n    return(\r\n        <div className=\"photoPreview-container\">\r\n            <img src={props.photo.urls.thumb} alt={props.photo.description} \r\n            onLoad={() =>{\r\n                let loaded = false\r\n                if(props.photos.allIds.includes(props.photo.id)){\r\n                    loaded = true\r\n                }\r\n                dispatch(imageLoad(props.photo.id, loaded))\r\n                }}\r\n                />\r\n            <div className=\"photoPreview-attribution_wrapper\">\r\n                <div className=\"photoPreview-attribution\">\r\n                    <span>Photo by </span><a target=\"_blank\" rel=\"noopener noreferrer\" href={`${props.photo.links.html}/${utm}`}><em>{props.photo.user.username}</em></a><span> on </span><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://unsplash.com/${utm}`}><em>Unsplash</em></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// export default ImagePreview\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(ImagePreview) ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Loader = (props) => {\r\n    let progress = props.photos.loadProgress\r\n    let length = props.photos.loadLength\r\n    return(\r\n        <div className=\"loader-wrapper modal-box\">\r\n            <div className=\"loader-bar\">\r\n                <div className=\"loader-length\"></div>\r\n                <div \r\n                    className=\"loader-progress\"\r\n                    style={{width: `${(progress / length) * 100}%`}}\r\n                ></div>\r\n            </div>\r\n            <div className=\"loader-counter\">\r\n            <p>{!progress > 0 ? \"Initiating query...\" : `loading images: ${Math.round((progress / length) * 100)}%`}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Loader) ","import React from 'react'\r\nimport Loader from './Loader'\r\n\r\nconst ErrorModal = (props) => {\r\n    return(\r\n        <div id=\"errorModal\" className={`modal-wrapper ${props.customClass ? props.customClass : \"\"} ${props.message || props.loading ? \"modal-message_display\" : \"\"}`}>\r\n            {\r\n                props.message ? \r\n                    <div className=\"modal-box\">\r\n                        <p>{props.message ? props.message : \"\"}</p>\r\n                        {\r\n                            props.message ? \r\n                            <div>\r\n                                {props.children}\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </div>\r\n                    : props.loading ?\r\n                    <Loader />\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorModal","const toggleModal = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"TOGGLE_MODAL\",\r\n            value: value\r\n        })\r\n    }\r\n}\r\n\r\nexport default toggleModal","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport ImagePreview from './ImagePreview'\r\nimport ErrorModal from './ErrorModal'\r\nimport toggleModal from '../redux/actions/modalToggle'\r\n\r\nconst Gallery = (props) => {\r\n    const dispatch = useDispatch()\r\n    const queryKeyword = props.photos.query\r\n    const queryResult = props.photos.onDisplay\r\n        return(\r\n            <div className=\"gallery\">\r\n                \r\n                <ErrorModal \r\n                    message={props.photos.error}\r\n                    loading={props.photos.loading}\r\n                >\r\n                    <button className=\"button modal-button\"\r\n                        onClick={(e) => {\r\n                            dispatch(toggleModal(false))\r\n                        }}\r\n                        onMouseDown={e => e.target.classList.add('clicked')}\r\n                        onMouseUp={e => e.target.classList.remove('clicked')}\r\n                    >OKAY\r\n                    </button>    \r\n                </ErrorModal>\r\n\r\n                    <div className=\"searchResults\">\r\n                        {\r\n                            queryKeyword && queryResult ? \r\n                                queryResult.map((photo, index) => {\r\n                                    return <ImagePreview \r\n                                                key={index}\r\n                                                photo={photo}\r\n                                            />\r\n                                }) :\r\n                                null\r\n                        }\r\n                    </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Gallery) ","import React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\n\r\nimport queryActions from '../redux/actions/query'\r\nimport ErrorModal from './ErrorModal'\r\n\r\n\r\nconst SavedQueries = (props) => {\r\n    const dispatch = useDispatch()\r\n    return(\r\n            <div className=\"savedQueries-wrapper\" id=\"savedQueries\">\r\n                <div className=\"savedQueries-results\">\r\n                <ErrorModal \r\n                    customClass=\"savedQueries-modal\"\r\n                    message={props.queries.savePrompt}\r\n                >\r\n                        {\r\n                            props.queries.savedQueries.indexOf(props.queries.query) >= 0 || !props.queries.query || props.queries.onDisplay.length <= 0 ? \r\n                            <button className=\"button modal-button\"\r\n                                onClick={(e) => {\r\n                                    dispatch(queryActions.savedQueries.saveQueryCancel())\r\n                                }}\r\n                                onMouseDown={e => e.target.classList.add('clicked')}\r\n                                onMouseUp={e => e.target.classList.remove('clicked')}\r\n                            >\r\n                                OKAY\r\n                            </button>:\r\n\r\n                            <React.Fragment>\r\n                                <button className=\"button modal-button\"\r\n                                    onClick={(e) => {\r\n                                        dispatch(queryActions.savedQueries.saveQueryConfirm())\r\n                                    }}\r\n                                    onMouseDown={e => e.target.classList.add('clicked')}\r\n                                    onMouseUp={e => e.target.classList.remove('clicked')}\r\n                                >\r\n                                    YES\r\n                                </button>   \r\n\r\n                                <button className=\"button modal-button\"\r\n                                    onClick={(e) => {\r\n                                        dispatch(queryActions.savedQueries.saveQueryCancel())\r\n                                    }}\r\n                                    onMouseDown={e => e.target.classList.add('clicked')}\r\n                                    onMouseUp={e => e.target.classList.remove('clicked')}\r\n                                >\r\n                                    NO\r\n                                </button> \r\n                                </React.Fragment>\r\n                        }\r\n\r\n                </ErrorModal>\r\n                    <ul>\r\n                        {\r\n                            props.queries.savedQueries.length > 0 ?\r\n                                props.queries.savedQueries.map(query => {\r\n                                    return  <li key={`savedQuer-${query}`}>\r\n                                                <button\r\n                                                    className={\"savedQueries-button button\"}\r\n                                                    onClick={() => {\r\n                                                        dispatch(queryActions.savedQueries.loadSaved(query))\r\n                                                    }}\r\n                                                    onMouseDown={e => e.target.classList.add('clicked')}\r\n                                                    onMouseUp={e => e.target.classList.remove('clicked')}\r\n                                                >\r\n                                                    {query}\r\n                                                </button>\r\n                                            </li>\r\n                                }) :\r\n                                <li className=\"saveQueries-message\"><span>You haven't saved any queries yet.</span></li>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    queries: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(SavedQueries) ","const toggleBurger = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"TOGGLE_BURGER\"\r\n        })\r\n    }\r\n}\r\n\r\nexport default toggleBurger","import Burger from 'react-css-burger';\r\nimport React from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport toggleBurger from '../redux/actions/toggleBurger'\r\n \r\nconst Hamburger = (props) => {\r\n    const dispatch = useDispatch()\r\n    let active = props.photos.burgerActive\r\n    return (\r\n      <Burger\r\n        onClick={(e) => {\r\n          e.preventDefault(); \r\n          active = !active\r\n          dispatch(toggleBurger())\r\n          document.getElementById(\"savedQueries\").classList.toggle(\"savedQueries-wrapper_display\")\r\n        }}\r\n        active={props.photos.burgerActive}\r\n        burger=\"vortex\"\r\n        marginTop={\"0\"}\r\n        marginLeft={\"0\"}\r\n      />\r\n    );\r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n    photos: state\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Hamburger) ","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport queryActions from '../redux/actions/query'\r\n// import savedQueries from '../redux/actions/savedQueries'\r\nimport Hamburger from './Hamburger'\r\n\r\nconst SaveButton = (props) => {\r\n    const mobile = () => {\r\n        if(document.documentElement.clientWidth < 768){\r\n            return true\r\n        }\r\n        else return false;\r\n    }\r\n    const dispatch = useDispatch()\r\n\r\n    return(\r\n        <div className=\"saveButton-wrapper\"\r\n        >\r\n            <button \r\n                className={`searchField-button button saveButton ${props.className}`}\r\n                onClick={(e) => {\r\n                    e.preventDefault()\r\n                        if(mobile()){\r\n                            document.getElementById(\"savedQueries\").classList.add(\"savedQueries-wrapper_display\")\r\n                        }\r\n                    dispatch(queryActions.savedQueries.saveQueryRequest())\r\n                }}\r\n                onMouseDown={e => e.target.classList.add('clicked')}\r\n                onMouseUp={e => e.target.classList.remove('clicked')}\r\n            >\r\n                SAVE\r\n            </button>\r\n\r\n            <div className=\"hamburger\">\r\n                <Hamburger />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaveButton","import React from 'react';\r\n\r\nimport './css/main.css';\r\nimport SearchBar from './components/SearchBar';\r\nimport Gallery from './components/Gallery';\r\nimport SavedQueries from './components/SavedQueries';\r\nimport SaveButton from './components/SaveButton';\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n            <SearchBar>\r\n              <SaveButton />\r\n            </SearchBar>\r\n        <section className=\"main\">    \r\n            <Gallery />\r\n            <SavedQueries />\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default App\r\n\r\n","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport initialState from './redux/initialState'\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport combinedReducers from './redux/reducers/combinedReducers';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport './css/main.css';\r\nimport App from './App';\r\n\r\n\r\nconst store = createStore(\r\n    combinedReducers, \r\n    initialState,\r\n    compose(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>,\r\ndocument.getElementById('root')\r\n);"],"sourceRoot":""}